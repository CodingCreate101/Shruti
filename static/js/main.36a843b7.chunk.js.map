{"version":3,"sources":["files/cover.jpg","config/fbConfig.js","actions/playerActions.js","components/player/BottomPlayer.js","components/layout/FloatingButton.js","components/layout/Header.js","components/list/FilesList.js","Duration.js","components/player/FullPlayer.js","components/player/Player.js","components/list/AudioBooksList.js","components/auth/Login.js","actions/authActions.js","components/auth/SignUp.js","components/pages/Settings.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/playerReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","changeSong","songObject","type","updatePlayed","value","BottomPlayer","togglePlay","_this","props","togglePlayer","openFullPlayer","openPlayer","player","this","button","playing","react_default","a","createElement","className","onClick","song","title","narrator","Component","connect","state","dispatch","FloatingButton","fixedButton","showDown","showMenu","toggleMenu","concat","style","top","right","height","react_router_dom","to","Header","navigate","path","history","push","goBack","_this2","options","marginTop","marginBottom","backLink","year","layout_FloatingButton","withRouter","FilesList","selectSong","songsList","userLoggedIn","selectingSong","list","Object","keys","map","key","index","currentSong","headerOptions","bookName","floatButton","react","layout_Header","player_BottomPlayer","ownProps","songId","Duration","_ref","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","format","string","slice","FullPlayer","getSongIndexOnPlaylist","selectedSong","findIndex","playNextOrPrevSong","pick","songIndex","undefined","seekSong","amount","handleRateChange","e","changePlaybackRate","target","handleBookMark","console","log","sleeper","dur","setTimeout","toggleTimer","sleepTimer","clearTimeout","timerStatus","localStorage","getItem","onSeekMouseDown","updateSeekStatus","onSeekChange","parseFloat","onSeekMouseUp","onProgress","songEnded","showTimerMin","timerClass","release","backgroundImage","CoverImage","played","min","max","step","onPointerDown","onChange","onTouchMove","onPointerUp","playedSeconds","totalDuration","defaultValue","playbackRate","duration","rate","status","seekStatus","Player","ref","componentDidMount","initPlayer","seekValue","seekTo","getDuration","getCurrentTime","resetSeek","resetSeekValue","refUPDATE","ReactPlayer_default","onPause","url","RPControls","getState","initialData","collection","doc","get","then","querySnapshot","data","catch","err","AudioBooksList","thisbe","loading","setState","objectSpread","goToPlayList","playlist","arrayOfObj","entries","changePlaylist","makeBookList","allPlaylists","tempFunction","lib","size","color","Login","email","password","handleSubmit","preventDefault","loginWithEmail","handleChange","defineProperty","id","react_router","onSubmit","htmlFor","authError","class","role","creds","signInWithEmailAndPassword","SignUp","firstName","city","signUpWithEmail","createUserWithEmailAndPassword","resp","user","uid","set","Settings","logout","signOut","setSleepTimer","setItem","sleepTime","error","App","updateLoginStatus","player_Player","exact","component","onAuthStateChanged","currentUser","Boolean","window","location","hostname","match","initState","authReducer","arguments","length","action","message","loaded","loadedSeconds","playerReducer","sel","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36a843b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1f2c801c.jpg\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCKwHZ19MLlPx_FYgpvA6pbhkzTSsNhTrM\",\r\n    authDomain: \"shruti-ac2cd.firebaseapp.com\",\r\n    databaseURL: \"https://shruti-ac2cd.firebaseio.com\",\r\n    projectId: \"shruti-ac2cd\",\r\n    storageBucket: \"shruti-ac2cd.appspot.com\",\r\n    messagingSenderId: \"184253930018\",\r\n    appId: \"1:184253930018:web:4fcc8249564d9507\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // Firestore\r\n  const db = firebase.firestore();\r\n  // Firebase\r\n  export let auth = firebase.auth();\r\n\r\n  export default db;","import db from '../config/fbConfig'\r\n\r\n\r\nexport const initPlayer = (RPControls) => {\r\n    return (dispatch, getState) => {\r\n        // Async CODE\r\n        let initialData = [];\r\n\r\n        db.collection(\"Books\").doc('books').get().then((querySnapshot) => {\r\n            initialData = querySnapshot.data()\r\n        }).then(() => {\r\n            dispatch({ type: 'INIT_PLAYER', RPControls, initialData})\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const togglePlayer = () => {\r\n    return {\r\n        type: 'TOGGLE_PLAY'\r\n    }\r\n}\r\n\r\nexport const changeSong = (songObject) => {\r\n    return {\r\n        type: 'CHANGE_SONG',\r\n        songObject\r\n    }\r\n}\r\n\r\nexport const seekSong = (duration) => {\r\n    return {\r\n        type: 'SEEK_SONG',\r\n        duration\r\n    }\r\n}\r\n\r\nexport const resetSeekValue = () => {\r\n    return {\r\n        type: 'RESET_SEEK_VALUE'\r\n    }\r\n}\r\n\r\nexport const changePlaybackRate = (rate) => {\r\n    return {\r\n        type: 'CHANGE_PLAYBACK_RATE',\r\n        rate\r\n    }\r\n}\r\n\r\nexport const toggleTimer = () => {\r\n    return {\r\n        type: 'TOGGLE_TIMER',\r\n    }\r\n}\r\n\r\nexport const updateSeekStatus = (status) => {\r\n    return {\r\n        type: 'UPDATE_SEEK_STATUS',\r\n        seekStatus: status\r\n    }\r\n}\r\n\r\nexport const updatePlayed = (value) => {\r\n    return {\r\n        type: 'UPDATE_PLAYED',\r\n        value\r\n    }\r\n}\r\n\r\nexport const refUPDATE = (status, dur) => {\r\n    return {\r\n        type: 'REF_UPDATE',\r\n        status: status,\r\n        dur\r\n    }\r\n}\r\n\r\nexport const changePlaylist = (playlist, bookName) => {\r\n    return {\r\n        type: 'CHANGE_PLAYLIST',\r\n        playlist,\r\n        bookName\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { togglePlayer } from '../../actions/playerActions';\r\n\r\nclass BottomPlayer extends Component {\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlayer();\r\n    }\r\n    openFullPlayer = () => {\r\n        this.props.openPlayer();\r\n    }\r\n    render () {\r\n        const { player }  = this.props;\r\n\r\n        let button = player.playing ? 'fas fa-pause-circle' : 'fas fa-play-circle';\r\n        \r\n        return (\r\n            <span>\r\n                <div className=\"bottomPlayer\">\r\n                    <div className=\"list-group-item text-light waves-effect waves-light font-weight-bold black darken-4\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-10\" onClick={this.openFullPlayer}>\r\n                                <div className=\"songTitle text-success\">\r\n                                    {player.song.title}\r\n                                </div>\r\n                                <p className=\"font-weight-lighter author-name\">\r\n                                    {player.song.narrator}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-2\">\r\n                                <span className=\"text-white bigFont float-right\" onClick={this.togglePlay}>\r\n                                    <i className={button}></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        togglePlayer: () => dispatch(togglePlayer())\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(BottomPlayer);","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FloatingButton extends Component {\r\n    fixedButton = ''\r\n    showDown = ''\r\n    showMenu = false\r\n    toggleMenu = () => {\r\n\r\n        if(!this.showMenu) {\r\n            this.fixedButton = 'active'\r\n            this.showDown = 'shown'\r\n        } else {\r\n            this.fixedButton = ''\r\n            this.showDown = ''\r\n        }\r\n        this.showMenu = !this.showMenu\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`fixed-action-btn ${this.fixedButton}`} style={{top: '0', right: '0', height: '316px'}}>\r\n                <Link onClick={this.toggleMenu} to=\"#\" className=\"btn-floating red waves-effect waves-light\">\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </Link>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                    <li>\r\n                        <Link to={'/settings'} className={`btn-floating btn-sm yellow darken-4 waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-cog\"></i>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={'/'} className={`btn-floating btn-sm green waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-home\"></i>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={'/help'} className={`btn-floating btn-sm blue darken-1 waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-question\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default FloatingButton\r\n","import React, { Component } from 'react'\r\nimport FloatingButton from './FloatingButton';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\r\n    navigate = (path) => {\r\n        if(path !== 'back') {\r\n            this.props.history.push(path)\r\n        } else {\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { options } = this.props;\r\n\r\n        return (\r\n            <div className=\"text-white text-center center container\" style={{marginTop: \"10px\", marginBottom: '10px'}}>\r\n                <div className=\"row\">\r\n\r\n                    { options.backLink ? (\r\n                            <div onClick={() => this.navigate(options.backLink)} className=\"col-2 waves-effect waves-light closeButton\">\r\n                                <i className=\"fas fa-chevron-left\"></i>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"col-2 waves-effect waves-light closeButton\">\r\n                                <i className=\"fas fa-headphones\"></i>\r\n                            </div>\r\n                        )\r\n                    } \r\n                    \r\n                    { options.narrator ? (\r\n                        <div className=\"col-8 text-center font-weight-bold\">\r\n                            { options.title }\r\n                            <p className=\"font-weight-lighter\"> { options.narrator } - { options.year }</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-8 waves-effect waves-light closeButton\">\r\n                            { options.title } \r\n                        </div>\r\n                    ) }\r\n                    \r\n                    <div className=\"col-2\">\r\n                        <FloatingButton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React, { Component, Fragment } from \"react\";\r\nimport BottomPlayer from \"../player/BottomPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeSong } from '../../actions/playerActions';\r\nimport Header from \"../layout/Header\";\r\n\r\nclass FilesList extends Component {\r\n\r\n    componentDidMount () {\r\n        if(!this.props.player.songsList) {\r\n            this.props.history.push('/');\r\n            \r\n        } else if(!this.props.auth.userLoggedIn) {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    selectSong = (songObject) => {\r\n        this.props.changeSong(songObject);\r\n    }\r\n\r\n    openFullPlayer = () => {\r\n        this.props.history.push('/play');\r\n    }\r\n    \r\n    render() {\r\n        const { player } = this.props;\r\n        let selectingSong = this.selectSong;\r\n        let list = player.songsList ? (\r\n\r\n            Object.keys(player.songsList).map(function(key, index) {\r\n                let currentSong = 'list-group-item waves-effect waves-light font-weight-bold darken-4 grey ';\r\n                currentSong +=  player.song.title === player.songsList[key].title ? 'text-success' : 'text-light';\r\n                return (\r\n                            <div key={index} onClick={() => selectingSong(player.songsList[key])} className={ currentSong }>\r\n                                {player.songsList[key].title}\r\n                                <p className=\"font-weight-lighter author-name\">{player.songsList[key].narrator}</p>\r\n                                \r\n                            </div>\r\n                        )\r\n            })\r\n        ) : null;\r\n\r\n        const headerOptions = {\r\n            backLink: '/',\r\n            title: player.bookName,\r\n            narrator: null,\r\n            year: null,\r\n            floatButton: true\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Header options={headerOptions} />\r\n                <div className=\"list-group\">\r\n                    { list }\r\n                    { player.song.title ? <BottomPlayer openPlayer={this.openFullPlayer} /> : null }\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSong: (songId) => dispatch(changeSong(songId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(FilesList);","import React from 'react'\r\n\r\nexport default function Duration ({ className, seconds }) {\r\n  return (\r\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n      {format(seconds)}\r\n    </time>\r\n  )\r\n}\r\n\r\nfunction format (seconds) {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nfunction pad (string) {\r\n  return ('0' + string).slice(-2)\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { togglePlayer, changeSong, seekSong, changePlaybackRate, toggleTimer, updateSeekStatus, updatePlayed } from '../../actions/playerActions';\r\nimport Duration from \"../../Duration\";\r\nimport CoverImage from \"../../files/cover.jpg\";\r\nimport Header from \"../layout/Header\";\r\n\r\nclass FullPlayer extends Component {\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlayer();\r\n    }\r\n\r\n    getSongIndexOnPlaylist = (selectedSong) => {\r\n        return this.props.player.songsList.findIndex((song) => {\r\n            return song === selectedSong\r\n        })\r\n    }\r\n\r\n    playNextOrPrevSong = (pick) => {\r\n        const a = this.props.player\r\n        let songIndex = this.getSongIndexOnPlaylist(a.song);\r\n        if(a.songsList[songIndex + pick] !== undefined) {\r\n            this.props.changeSong(a.songsList[songIndex + pick]);\r\n        }\r\n    }\r\n\r\n    seekSong = (amount) => {\r\n        this.props.seekSong(amount);\r\n    }\r\n\r\n    componentDidMount () {\r\n        if(!this.props.player.song.title) {\r\n            this.props.history.push('/book');\r\n        }\r\n    }\r\n\r\n    handleRateChange = (e) => {\r\n        this.props.changePlaybackRate(e.target.value);\r\n    }\r\n\r\n    handleBookMark = () => {\r\n        console.log(\"Handle BookMark\");\r\n    }\r\n\r\n    sleeper = (dur) => {\r\n        setTimeout(() => {\r\n            this.togglePlay();\r\n            this.props.toggleTimer();\r\n        }, dur*1000);\r\n    }\r\n\r\n    sleepTimer = () => {\r\n\r\n        this.props.toggleTimer();\r\n\r\n        setTimeout(() => {\r\n            clearTimeout(this.sleeper);\r\n            if(this.props.player.timerStatus===1) {\r\n                this.sleeper(localStorage.getItem('sleepTime') - 2 ); // 10-2=8 because 3 secs are taken for \"proper\" verification.\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n    onSeekMouseDown = () => {\r\n        this.props.updateSeekStatus(true);\r\n    }\r\n    onSeekChange = e => {\r\n        this.props.updatePlayed(parseFloat(e.target.value))\r\n    }\r\n    onSeekMouseUp = e => {\r\n        this.props.updateSeekStatus(false);\r\n        this.props.seekSong(parseFloat(e.target.value));\r\n        // this.player.seekTo(parseFloat(e.target.value))\r\n    }\r\n    onProgress = state => {\r\n        // console.log('onProgress', state)\r\n        // // We only want to update time slider if we are not currently seeking\r\n        // if (!this.state.seeking) {\r\n        //   this.setState(state)\r\n        // }\r\n    }\r\n\r\n    songEnded = () => {\r\n        console.log(\"Song ended\");\r\n    }\r\n\r\n    render () {\r\n\r\n        const { player }  = this.props;\r\n        let timerClass = 'bigFont waves-effect waves-light';\r\n        let showTimerMin = '';\r\n\r\n        showTimerMin =  <span className=\"controlLabels\">Beta</span>; // TODO: Until this works properly\r\n\r\n        if(player.timerStatus) {\r\n            timerClass += ' text-success';\r\n        }\r\n\r\n        const headerOptions = {\r\n            backLink: '/book',\r\n            title: player.song.title,\r\n            narrator: player.song.narrator,\r\n            year: player.song.release,\r\n            floatButton: true\r\n        }\r\n        \r\n        let button = player.playing ? 'fas fa-pause-circle' : 'fas fa-play-circle';\r\n        \r\n        return (\r\n            <div className=\"grey darken-4 text-center FullPlayer\">\r\n\r\n                {/* Header */}\r\n                <Header options={headerOptions} />\r\n                \r\n                {/* Header Image */}\r\n                <div className=\"text-white center container\">\r\n                    <div className=\"row coverImage\" style={{backgroundImage: `url(${CoverImage})`}}>\r\n                        \r\n                    </div>\r\n                </div>\r\n\r\n                {/* Player controls */}\r\n                <div className=\"playerControls text-white\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <input\r\n                                value={player.played}\r\n                                className=\"seekBar\"\r\n                                type='range' min={0.0001} max={0.9999} step='any'\r\n                                onPointerDown={this.onSeekMouseDown}\r\n                                onChange={this.onSeekChange}\r\n                                onTouchMove = {this.onSeekChange}\r\n                                onPointerUp={this.onSeekMouseUp}\r\n                            />\r\n                            <progress className=\"progressBar\" max={0.9999} value={player.played} />\r\n                            \r\n                            <span className=\"durations\">\r\n                                <span className=\"float-left\">\r\n                                    <Duration seconds={player.playedSeconds} />\r\n                                </span>\r\n                                <span className=\"float-right\">\r\n                                    <Duration seconds={player.totalDuration - player.playedSeconds} />\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row align-middle\">\r\n                        <div className=\"col text-right\">\r\n                            <span className=\"bigFont align-middle\" onClick={()=>this.playNextOrPrevSong(-1)}>\r\n                                <i className=\"fas fa-chevron-circle-left\"></i>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <span className=\"biggerFont\" onClick={this.togglePlay}>\r\n                                <i className={button}></i>\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"col text-left\">\r\n                            <span className=\"bigFont\" onClick={()=>this.playNextOrPrevSong(1)}>\r\n                                <i className=\"fas fa-chevron-circle-right\"></i>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"spacer\"></div>\r\n\r\n                    <div className=\"row align-middle\">\r\n                        <div className=\"col\">\r\n                            <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('60m')}>\r\n                                <i className=\"fas fa-undo-alt\"></i>\r\n                                <span className=\"controlLabels\">1m</span>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col text-right\">\r\n                            <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('10m')}>\r\n                                <i className=\"fas fa-undo-alt\"></i>\r\n                                <span className=\"controlLabels\">10s</span>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col text-center\">\r\n                            {/* <span className=\"bigFont\" onClick={this.handleBookMark}>\r\n                                <i className=\"fas fa-bookmark\"></i>\r\n                            </span> */}\r\n                        </div>\r\n\r\n                        <div className=\"col text-left\">\r\n                            <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('10p')}>\r\n                                <i className=\"fas fa-redo-alt\"></i>\r\n                                <span className=\"controlLabels\">10s</span>\r\n                            </span>\r\n                        </div>\r\n\r\n                        <div className=\"col\">\r\n                            <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('60p')}>\r\n                                <i className=\"fas fa-redo-alt\"></i>\r\n                                <span className=\"controlLabels\">1m</span>\r\n                            </span>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"spacer\"></div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col\"></div>\r\n                        <div className=\"col\">\r\n                            <select className=\"custom-select\" onChange={this.handleRateChange} defaultValue={player.playbackRate}>\r\n                                <option value={0.5}>0.5x</option>\r\n                                <option value={1}>1x</option>\r\n                                <option value={1.25}>1.25x</option>\r\n                                <option value={1.5}>1.5x</option>\r\n                                <option value={1.75}>1.75x</option>\r\n                                <option value={2}>2x</option>\r\n                                <option value={2.25}>2.25x</option>\r\n                                <option value={2.5}>2.5x</option>\r\n                                <option value={2.75}>2.75x</option>\r\n                                <option value={3}>3x</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"col-6 bigFont\">\r\n                            <span className={timerClass} onClick={this.sleepTimer}>\r\n                                <i className=\"fas fa-stopwatch\"></i>\r\n                                {showTimerMin}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        togglePlayer: () => dispatch(togglePlayer()),\r\n        changeSong: (songId) => dispatch(changeSong(songId)),\r\n        seekSong: (duration) => dispatch(seekSong(duration)),\r\n        changePlaybackRate: (rate) => dispatch(changePlaybackRate(rate)),\r\n        toggleTimer: (rate) => dispatch(toggleTimer(rate)),\r\n        updateSeekStatus: (status) => dispatch(updateSeekStatus(status)),\r\n        updatePlayed: (value) => dispatch(updatePlayed(value)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(FullPlayer);\r\n\r\n\r\n// TODO: SEE IF YOU CAN SIMPLIFY this.props.<>.<>.<> tail by spreading props in simple variable - but that for later.","import React, { Component } from \"react\";\r\nimport ReactPlayer from 'react-player';\r\nimport { connect } from \"react-redux\";\r\nimport { initPlayer, resetSeekValue, updatePlayed, refUPDATE } from '../../actions/playerActions';\r\n\r\nclass Player extends Component {\r\n\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.initPlayer(this.player);\r\n    }\r\n\r\n    seekValue = (dur) => {\r\n\r\n        if((dur*dur) < 1) {\r\n            this.player.seekTo(this.player.getDuration()*dur);\r\n        } else {\r\n            this.player.seekTo(this.player.getCurrentTime() + dur);\r\n        }\r\n    }\r\n\r\n    resetSeek = () => {\r\n        this.props.resetSeekValue();\r\n    }\r\n\r\n    onProgress = state => {\r\n        // We only want to update time slider if we are not currently seeking\r\n        this.props.refUPDATE(state, this.player.getDuration());\r\n    }\r\n    \r\n    render () {\r\n        const { player }  = this.props;\r\n\r\n        switch (player.seekSong) {\r\n            case '10m':\r\n                this.seekValue(-10);\r\n                this.resetSeek();\r\n            break;\r\n            case '60m':\r\n                this.seekValue(-60);\r\n                this.resetSeek();\r\n            break;\r\n            case '10p':\r\n                this.seekValue(10);\r\n                this.resetSeek();\r\n            break;\r\n            case '60p':\r\n                this.seekValue(60);\r\n                this.resetSeek();\r\n            break;\r\n        \r\n            default:\r\n                if( player.seekSong > 0 && !player.seekStatus) {\r\n                    this.seekValue(player.played);\r\n                    this.resetSeek();\r\n                }\r\n                break;\r\n        }\r\n        \r\n        return (\r\n            <span>\r\n                <ReactPlayer\r\n                    ref={this.ref}\r\n                    playbackRate={player.playbackRate}\r\n                    onPause={this.onPause}\r\n                    playing={player.playing}\r\n                    className=\"PlayerDia\"\r\n                    url={player.song.url}\r\n                    onProgress={this.onProgress}\r\n                />\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        initPlayer: (RPControls) => dispatch(initPlayer(RPControls)),\r\n        resetSeekValue: () => dispatch(resetSeekValue()),\r\n        updatePlayed: (value) => dispatch(updatePlayed(value)),\r\n        refUPDATE: (status, dur) => dispatch(refUPDATE(status, dur))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Player);","import React, { Component, Fragment } from \"react\";\r\nimport { changePlaylist } from '../../actions/playerActions';\r\nimport { connect } from \"react-redux\";\r\nimport { FireworkSpinner } from \"react-spinners-kit\";\r\nimport Header from \"../layout/Header\";\r\n\r\nclass AudioBooksList extends Component {\r\n    initialData = []\r\n    thisbe = ''\r\n    state = {\r\n        loading: true\r\n    }\r\n                \r\n    componentDidMount = () => {\r\n        if(!this.props.auth.userLoggedIn) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    loading: false\r\n                })\r\n                if(!this.props.auth.userLoggedIn) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            }, 3000)\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    goToPlayList = (playlist, key) => {\r\n        // Convert object to array\r\n        const arrayOfObj = Object.entries(playlist).map((e) => (  e[1] ));\r\n\r\n        // Dispatch action\r\n        this.props.changePlaylist(arrayOfObj, key);\r\n\r\n        // Open the book page\r\n        this.props.history.push('/book');\r\n    }\r\n\r\n    makeBookList = (player) => {\r\n        const { allPlaylists } = player\r\n        let currentSong = 'list-group-item waves-effect waves-light font-weight-bold darken-4 grey text-light'\r\n        let tempFunction = this.goToPlayList;\r\n        const list = allPlaylists ? Object.keys(allPlaylists).map(function(key, index) {\r\n                        return  <div key={index} onClick={() => {tempFunction(allPlaylists[key], key)}} className={ currentSong }>\r\n                                    {key}\r\n                                </div>\r\n\r\n                        }) : null\r\n\r\n        return list;\r\n    }\r\n\r\n    headerOptions = {\r\n        backLink: null,\r\n        title: 'Shruti',\r\n        narrator: null,\r\n        year: null,\r\n        floatButton: true\r\n    }\r\n\r\n    render () {\r\n\r\n        const { player } = this.props\r\n\r\n        if(this.state.loading) {\r\n            return  <div className=\"loaderAniContainer\">\r\n                        <div className=\"loaderAni\">\r\n                            <FireworkSpinner\r\n                                size={50}\r\n                                color=\"rgb(0, 255, 137)\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n        } else {\r\n            return  <Fragment>\r\n                        <Header options={this.headerOptions} />\r\n                        { this.makeBookList(player) }\r\n                    </Fragment>\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePlaylist: (playlist, bookName) => dispatch(changePlaylist(playlist, bookName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(AudioBooksList);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { loginWithEmail } from '../../actions/authActions';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.loginWithEmail(this.state)\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.userLoggedIn) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return  <section className=\"form-elegant\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-lg-7 col-sm-12 col-xl-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body mx-4\">\r\n                                        <form onSubmit={this.handleSubmit}>\r\n                                            <div className=\"text-center\">\r\n                                                <h3 className=\"dark-grey-text mb-5\"><strong>Login</strong></h3>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"email\" className=\"form-control\" />\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"password\" id=\"password\" className=\"form-control\" />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"text-center mb-3\">\r\n                                                <button type=\"submit\" className=\"btn blue-gradient btn-block btn-rounded z-depth-1a text-white\">Login</button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                        {/* <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in with:</p>\r\n                                                // TODO: For future implementation: Use google authentication\r\n                                        <div className=\"row d-flex justify-content-center\">\r\n                                            <button type=\"button\" className=\"btn btn-danger btn-rounded z-depth-1a\">\r\n                                                Google\r\n                                            </button>\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    { this.props.auth.authError ? (\r\n                                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                                            { this.props.auth.authError }\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        null\r\n                                    ) }\r\n                                    <div className=\"modal-footer mx-5 pt-3 mb-1\">\r\n                                        <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                                            New here? \r\n                                            <Link to={'/signup'} className=\"blue-text ml-1\">\r\n                                                Sign Up\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginWithEmail: (playlist) => dispatch(loginWithEmail(playlist))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Login);\r\n\r\n","import { auth } from \"../config/fbConfig\";\r\nimport db from '../config/fbConfig'\r\n\r\n\r\nexport const updateLoginStatus = () => {\r\n    return (dispatch, getState) => {\r\n        // Async CODE\r\n        auth.onAuthStateChanged(() => {\r\n            dispatch({ type: 'UPDATE_LOGIN_STATUS', status: auth.currentUser ? true : false})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const loginWithEmail = (creds) => {\r\n    return (dispatch, getState) => {\r\n        auth.signInWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUpWithEmail = (data) => {\r\n    return (dispatch, getState) => {\r\n        auth.createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(resp => {\r\n            return db.collection('users').doc(resp.user.uid).set({\r\n              firstName: data.firstName,\r\n              city: data.city\r\n            });\r\n          }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n          }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n          });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        auth.signOut().then(function() {\r\n            dispatch({type: 'SIGN_OUT'})\r\n          }).catch(function(error) {\r\n            console.log(error)\r\n          });\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { signUpWithEmail } from '../../actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        city: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUpWithEmail(this.state)\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.userLoggedIn) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return <section className=\"form-elegant\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-9 col-lg-7 col-sm-12 col-xl-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body mx-4\">\r\n                                        <form onSubmit={this.handleSubmit}>\r\n                                            <div className=\"text-center\">\r\n                                                <h3 className=\"dark-grey-text mb-5\"><strong>Sign Up</strong></h3>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"firstName\" className=\"form-control\" />\r\n                                                <label htmlFor=\"firstName\">First Name</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"email\" className=\"form-control\" />\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"password\" id=\"password\" className=\"form-control\" />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"city\" className=\"form-control\" />\r\n                                                <label htmlFor=\"city\">City</label>\r\n                                            </div>\r\n                                            <div className=\"text-center mb-3\">\r\n                                                <button type=\"submit\" className=\"btn blue-gradient btn-block btn-rounded z-depth-1a text-white\">Sign up</button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                        {/* <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in with:</p>\r\n\r\n                                        <div className=\"row d-flex justify-content-center\">\r\n                                            <button type=\"button\" className=\"btn btn-danger btn-rounded z-depth-1a\">\r\n                                                Google\r\n                                            </button>\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    \r\n                                    { this.props.auth.authError ? (\r\n                                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                                            { this.props.auth.authError }\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        null\r\n                                    ) }\r\n\r\n                                    <div className=\"modal-footer mx-5 pt-3 mb-1\">\r\n                                        <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                                            Already a member?\r\n                                            <Link to={'/login'} className=\"blue-text ml-1\">\r\n                                                Login\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUpWithEmail: (data) => dispatch(signUpWithEmail(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(SignUp);\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { signOut } from '../../actions/authActions';\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../layout/Header';\r\n\r\nclass Settings extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.auth.userLoggedIn) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.signOut()\r\n        setTimeout(() => {\r\n            this.props.history.push('/login');\r\n        }, 200)\r\n    }\r\n    setSleepTimer = () => {\r\n        localStorage.setItem('sleepTime', this.state.sleepTime)\r\n    }\r\n\r\n    state = {\r\n        sleepTime: localStorage.getItem('sleepTime')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            sleepTime: e.target.value * 60\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const headerOptions = {\r\n            backLink: 'back',\r\n            title: 'Settings',\r\n            narrator: null,\r\n            year: null,\r\n            floatButton: true\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Header options={headerOptions} />\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item waves-effect waves-light darken-4 grey text-info\">\r\n                        <div className=\"md-form\">\r\n                            <input onChange={this.handleChange} value={this.state.sleepTime/60} type=\"text\" id=\"sleepTime\" className=\"form-control\" /> minute(s)\r\n                            <label htmlFor=\"sleepTime\" className=\"active\">Sleep Time</label>\r\n                        </div>\r\n                        <button className=\"btn btn-success\" onClick={this.setSleepTimer} >Update sleep timer</button>\r\n                    </li>\r\n                    <li className=\"list-group-item waves-effect waves-light darken-4 grey\">\r\n                        <div className=\"btn btn-danger\" onClick={this.logout}>Logout</div>\r\n                    </li>\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Settings);","import React, { Component } from 'react';\r\nimport FilesList from \"./components/list/FilesList\";\r\nimport { connect } from \"react-redux\";\r\nimport FullPlayer from './components/player/FullPlayer';\r\nimport Player from \"./components/player/Player\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport AudioBooksList from \"./components/list/AudioBooksList\";\r\nimport './App.css';\r\nimport { updateLoginStatus } from './actions/authActions';\r\nimport Login from './components/auth/Login';\r\nimport SignUp from './components/auth/SignUp';\r\nimport Settings from './components/pages/Settings';\r\n\r\nclass App extends Component {\r\n    componentDidMount = () => {\r\n        this.props.updateLoginStatus();\r\n    }\r\n    render () {\r\n        \r\n        if(!localStorage.getItem('sleepTime')) {\r\n            localStorage.setItem('sleepTime', 3600);\r\n        }\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"App\">\r\n                    \r\n                    <Player />\r\n                    <Route exact path='/' component={AudioBooksList} />\r\n                    <Route exact path='/book' component={FilesList}/>\r\n                    <Route path='/play' component={FullPlayer}/>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/signup' component={SignUp} />\r\n                    <Route path='/settings' component={Settings} />\r\n\r\n    \r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLoginStatus: () => dispatch(updateLoginStatus())\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    userLoggedIn: false\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'UPDATE_LOGIN_STATUS':\r\n            return {\r\n                ...state,\r\n                userLoggedIn: action.status\r\n            }\r\n        \r\n        case 'SIGN_OUT':\r\n            return {\r\n                ...state,\r\n                userLoggedIn: false\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n                return {\r\n                    ...state,\r\n                    userLoggedIn: true,\r\n                    authError: null\r\n                }\r\n\r\n        case 'SIGNUP_ERROR':\r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n        return {\r\n            ...state,\r\n            userLoggedIn: true,\r\n            authError: null\r\n        }\r\n\r\n        case 'LOGIN_ERROR':\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n\r\n","const initState = {\r\n    playing: false,\r\n    song: {\r\n        title: null,\r\n        narrator: null,\r\n        id: null\r\n    },\r\n    RPControls: '',\r\n    seekSong: '',\r\n    playbackRate: 1,\r\n    timerStatus: null,\r\n    seekStatus: false,\r\n    played: 0,\r\n    playedSeconds: 0,\r\n    loaded: 0,\r\n    loadedSeconds: 0,\r\n    totalDuration: 0,\r\n    bookName: null\r\n}\r\n\r\nconst playerReducer = (state = initState, action) => {\r\n    // This whole thing should be a switch - not if-else\r\n    if(action.type === 'TOGGLE_PLAY') {\r\n        return {\r\n            ...state,\r\n            playing: !state.playing\r\n        }\r\n    } else if(action.type === 'CHANGE_SONG') {\r\n        const sel = state.songsList.filter(song => {\r\n            return song === action.songObject;\r\n        });\r\n        state.RPControls.seekTo(10);\r\n        return !sel.length ? { ...state } : { ...state, playing: true, song: sel[0] } ;\r\n    } else if(action.type === 'INIT_PLAYER') {\r\n        return {\r\n            ...state,\r\n            RPControls: action.RPControls,\r\n            allPlaylists: action.initialData,\r\n            songsList: []\r\n        }\r\n    } else if(action.type === 'SEEK_SONG') {\r\n        return {\r\n            ...state,\r\n            seekSong: action.duration\r\n        }\r\n    } else if(action.type === 'RESET_SEEK_VALUE') {\r\n        return {\r\n            ...state,\r\n            seekSong: null\r\n        }\r\n    } else if(action.type === 'CHANGE_PLAYBACK_RATE') {\r\n        return {\r\n            ...state,\r\n            playbackRate: parseFloat(action.rate)\r\n        }\r\n    } else if(action.type === 'TOGGLE_TIMER') {\r\n        if(state.timerStatus === null) {\r\n            return {\r\n                ...state,\r\n                timerStatus: 1\r\n            }\r\n        } else if(state.timerStatus === 1) {\r\n            return {\r\n                ...state,\r\n                timerStatus: null\r\n            }\r\n        }\r\n    } else if(action.type === 'UPDATE_SEEK_STATUS') {\r\n        return {\r\n            ...state,\r\n            seekStatus: action.seekStatus\r\n        }\r\n    } else if(action.type === 'UPDATE_PLAYED') {\r\n        return {\r\n            ...state,\r\n            played: action.value\r\n        }\r\n    } else if(action.type === 'REF_UPDATE') {\r\n        return {\r\n            ...state,\r\n            played: parseFloat(action.status.played),\r\n            playedSeconds: parseFloat(action.status.playedSeconds), \r\n            loaded: parseFloat(action.status.loaded), \r\n            loadedSeconds: parseFloat(action.status.loadedSeconds),\r\n            totalDuration: parseFloat(action.dur)\r\n        }\r\n    } else if(action.type === 'CHANGE_PLAYLIST') {\r\n        return {\r\n            ...state,\r\n            songsList: action.playlist,\r\n            bookName: action.bookName\r\n        }\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default playerReducer;","import authReducer from \"./authReducer\";\r\nimport playerReducer from \"./playerReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    player: playerReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}