{"version":3,"sources":["files/cover.jpg","config/fbConfig.js","actions/playerActions.js","components/player/BottomPlayer.js","components/layout/FloatingButton.js","components/layout/Header.js","components/list/FilesList.js","Duration.js","components/player/FullPlayer.js","components/player/Player.js","components/list/AudioBooksList.js","components/auth/Login.js","actions/authActions.js","components/auth/SignUp.js","components/pages/Settings.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/playerReducer.js","reducers/rootReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","changeSong","songObject","type","updatePlayed","value","BottomPlayer","togglePlay","_this","props","togglePlayer","openFullPlayer","history","push","player","this","button","playing","react_default","a","createElement","className","style","background","onClick","song","title","narrator","Component","withRouter","connect","state","dispatch","FloatingButton","fixedButton","showDown","showMenu","toggleMenu","concat","top","right","height","react_router_dom","to","Header","navigate","path","goBack","_this2","options","marginTop","marginBottom","backLink","year","layout_FloatingButton","FilesList","selectSong","songsList","userLoggedIn","selectingSong","list","Object","keys","map","key","index","currentSong","headerOptions","bookName","floatButton","react","layout_Header","minHeight","player_BottomPlayer","ownProps","songId","Duration","_ref","seconds","dateTime","Math","round","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","format","string","slice","FullPlayer","getSongIndexOnPlaylist","selectedSong","findIndex","playNextOrPrevSong","pick","songIndex","undefined","seekSong","amount","handleRateChange","e","changePlaybackRate","target","handleBookMark","console","log","sleeper","dur","setTimeout","toggleTimer","sleepTimer","clearTimeout","timerStatus","localStorage","getItem","onSeekMouseDown","updateSeekStatus","onSeekChange","parseFloat","onSeekMouseUp","onProgress","songEnded","showTimerMin","timerClass","release","backgroundImage","CoverImage","position","bottom","width","played","min","max","step","onPointerDown","onChange","onTouchMove","onPointerUp","playedSeconds","totalDuration","defaultValue","playbackRate","duration","rate","status","seekStatus","Player","ref","componentDidMount","initPlayer","seekValue","seekTo","getDuration","getCurrentTime","resetSeek","resetSeekValue","refUPDATE","ReactPlayer_default","onPause","url","RPControls","getState","initialData","collection","doc","get","then","querySnapshot","data","catch","err","AudioBooksList","thisbe","loading","setState","objectSpread","goToPlayList","playlist","arrayOfObj","entries","changePlaylist","makeBookList","allPlaylists","tempFunction","lib","size","color","Login","email","password","handleSubmit","preventDefault","loginWithEmail","handleChange","defineProperty","id","react_router","onSubmit","htmlFor","authError","class","role","creds","signInWithEmailAndPassword","SignUp","firstName","city","signUpWithEmail","createUserWithEmailAndPassword","resp","user","uid","set","Settings","logout","signOut","setSleepTimer","setItem","sleepTime","error","App","updateLoginStatus","player_Player","exact","component","onAuthStateChanged","currentUser","Boolean","window","location","hostname","match","initState","authReducer","arguments","length","action","message","loaded","loadedSeconds","playerReducer","sel","filter","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+OCgBtCC,IAASC,cAXU,CACjBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,wCAMT,IAAMC,EAAKT,IAASU,YAETC,EAAOX,IAASW,OAEZF,ICEJG,EAAa,SAACC,GACvB,MAAO,CACHC,KAAM,cACND,eAqCKE,EAAe,SAACC,GACzB,MAAO,CACHF,KAAM,gBACNE,kBC9DFC,6MAEFC,WAAa,WACTC,EAAKC,MAAMC,kBAEfC,eAAiB,WACbH,EAAKC,MAAMG,QAAQC,KAAK,kFAElB,IACEC,EAAYC,KAAKN,MAAjBK,OAEJE,EAASF,EAAOG,QAAU,sBAAwB,qBAEtD,OACIC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0FAA0FC,MAAO,CAACC,WAAY,YACzHL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uEAAuEG,QAAST,KAAKJ,gBAChGO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACVP,EAAOW,KAAKC,OAEjBR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCACRP,EAAOW,KAAKE,WAGrBT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uEACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAiCG,QAAST,KAAKR,YAC3DW,EAAAC,EAAAC,cAAA,KAAGC,UAAWL,MAGtBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,gBAhCDO,aAqDZC,cAAWC,YAZF,SAACC,GACrB,MAAO,CACHjB,OAAQiB,EAAMjB,SAIK,SAACkB,GACxB,MAAO,CACHtB,aAAc,kBAAMsB,EDnCjB,CACH7B,KAAM,mBCsCY2B,CAA6CxB,YCTxD2B,6MA7CXC,YAAc,KACdC,SAAW,KACXC,UAAW,IACXC,WAAa,WAEL7B,EAAK4B,UAIL5B,EAAK0B,YAAc,GACnB1B,EAAK2B,SAAW,KAJhB3B,EAAK0B,YAAc,SACnB1B,EAAK2B,SAAW,SAKpB3B,EAAK4B,UAAY5B,EAAK4B,kFAItB,OACIlB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,oBAAAiB,OAAsBvB,KAAKmB,aAAeZ,MAAO,CAACiB,IAAK,IAAKC,MAAO,IAAKC,OAAQ,UAC1FvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMlB,QAAST,KAAKsB,WAAYM,GAAG,IAAItB,UAAU,6CAC7CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAGjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,YAAatB,UAAS,gEAAAiB,OAAkEvB,KAAKoB,WACnGjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAGrBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,IAAKtB,UAAS,sDAAAiB,OAAwDvB,KAAKoB,WACjFjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAGrBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,QAAStB,UAAS,8DAAAiB,OAAgEvB,KAAKoB,WAC7FjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BApCZO,aCCvBgB,6MAEFC,SAAW,SAACC,GACI,SAATA,EACCtC,EAAKC,MAAMG,QAAQC,KAAKiC,GAExBtC,EAAKC,MAAMG,QAAQmC,kFAIlB,IAAAC,EAAAjC,KAEGkC,EAAYlC,KAAKN,MAAjBwC,QAER,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CAA0CC,MAAO,CAAC4B,UAAW,OAAQC,aAAc,SAC9FjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAET4B,EAAQG,SACFlC,EAAAC,EAAAC,cAAA,OAAKI,QAAS,kBAAMwB,EAAKH,SAASI,EAAQG,WAAW/B,UAAU,8CAC3DH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAGjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAKvB4B,EAAQtB,SACNT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACT4B,EAAQvB,MACVR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAb,IAAsC4B,EAAQtB,SAA9C,MAA6DsB,EAAQI,OAGzEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACT4B,EAAQvB,OAIlBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAACkC,EAAD,gBAzCH1B,aAiDNC,cAAWe,GC/CpBW,6MAWFC,WAAa,SAACtD,GACVM,EAAKC,MAAMR,WAAWC,uFATlBa,KAAKN,MAAMK,OAAO2C,UAGX1C,KAAKN,MAAMT,KAAK0D,cACvB3C,KAAKN,MAAMG,QAAQC,KAAK,UAHxBE,KAAKN,MAAMG,QAAQC,KAAK,sCAWvB,IACGC,EAAWC,KAAKN,MAAhBK,OACJ6C,EAAgB5C,KAAKyC,WACrBI,EAAO9C,EAAO2C,UAEdI,OAAOC,KAAKhD,EAAO2C,WAAWM,IAAI,SAASC,EAAKC,GAC5C,IAAIC,EAAc,2EAElB,OADAA,GAAgBpD,EAAOW,KAAKC,QAAUZ,EAAO2C,UAAUO,GAAKtC,MAAQ,eAAiB,aAEzER,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,EAAOzC,QAAS,kBAAMmC,EAAc7C,EAAO2C,UAAUO,KAAO3C,UAAY6C,GAC7EpD,EAAO2C,UAAUO,GAAKtC,MACvBR,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAmCP,EAAO2C,UAAUO,GAAKrC,aAK1F,KAEEwC,EAAgB,CAClBf,SAAU,IACV1B,MAAOZ,EAAOsD,SACdzC,SAAU,KACV0B,KAAM,KACNgB,aAAa,GAGjB,OAAQnD,EAAAC,EAAAC,cAACkD,EAAA,SAAD,KACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAACmD,EAAD,CAAQtB,QAASkB,IACjBjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACTuC,IAGV1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,OAIRH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACkD,UAAW,WAEtB1D,EAAOW,KAAKC,MAAQR,EAAAC,EAAAC,cAACqD,EAAD,MAAmB,aAzDrC7C,aA8ETE,cAbS,SAACC,EAAO2C,GAC5B,MAAO,CACH5D,OAAQiB,EAAMjB,OACdd,KAAM+B,EAAM/B,OAIO,SAACgC,GACxB,MAAO,CACH/B,WAAY,SAAC0E,GAAD,OAAY3C,EAAS/B,EAAW0E,OAIrC7C,CAA6CyB,GClF7C,SAASqB,EAATC,GAA2C,IAAtBxD,EAAsBwD,EAAtBxD,UAAWyD,EAAWD,EAAXC,QAC7C,OACE5D,EAAAC,EAAAC,cAAA,QAAM2D,SAAQ,IAAAzC,OAAM0C,KAAKC,MAAMH,GAAjB,KAA8BzD,UAAWA,GAM3D,SAAiByD,GACf,IAAMI,EAAO,IAAIC,KAAe,IAAVL,GAChBM,EAAKF,EAAKG,cACVC,EAAKJ,EAAKK,gBACVC,EAAKC,EAAIP,EAAKQ,iBACpB,GAAIN,EACF,SAAA9C,OAAU8C,EAAV,KAAA9C,OAAgBmD,EAAIH,GAApB,KAAAhD,OAA2BkD,GAE7B,SAAAlD,OAAUgD,EAAV,KAAAhD,OAAgBkD,GAbXG,CAAOb,IAgBd,SAASW,EAAKG,GACZ,OAAQ,IAAMA,GAAQC,OAAO,wBCfzBC,6MAEFvF,WAAa,WACTC,EAAKC,MAAMC,kBAGfqF,uBAAyB,SAACC,GACtB,OAAOxF,EAAKC,MAAMK,OAAO2C,UAAUwC,UAAU,SAACxE,GAC1C,OAAOA,IAASuE,OAIxBE,mBAAqB,SAACC,GAClB,IAAMhF,EAAIX,EAAKC,MAAMK,OACjBsF,EAAY5F,EAAKuF,uBAAuB5E,EAAEM,WACT4E,IAAlClF,EAAEsC,UAAU2C,EAAYD,IACvB3F,EAAKC,MAAMR,WAAWkB,EAAEsC,UAAU2C,EAAYD,OAItDG,SAAW,SAACC,GACR/F,EAAKC,MAAM6F,SAASC,MASxBC,iBAAmB,SAACC,GAChBjG,EAAKC,MAAMiG,mBAAmBD,EAAEE,OAAOtG,UAG3CuG,eAAiB,WACbC,QAAQC,IAAI,sBAGhBC,QAAU,SAACC,GACPC,WAAW,WACPzG,EAAKD,aACLC,EAAKC,MAAMyG,eACR,IAAJF,MAGPG,WAAa,WAET3G,EAAKC,MAAMyG,cAEXD,WAAW,WACPG,aAAa5G,EAAKuG,SACiB,IAAhCvG,EAAKC,MAAMK,OAAOuG,aACjB7G,EAAKuG,QAAQO,aAAaC,QAAQ,aAAe,IAEtD,QAGPC,gBAAkB,WACdhH,EAAKC,MAAMgH,kBAAiB,MAEhCC,aAAe,SAAAjB,GACXjG,EAAKC,MAAML,aAAauH,WAAWlB,EAAEE,OAAOtG,WAEhDuH,cAAgB,SAAAnB,GACZjG,EAAKC,MAAMgH,kBAAiB,GAC5BjH,EAAKC,MAAM6F,SAASqB,WAAWlB,EAAEE,OAAOtG,WAG5CwH,WAAa,SAAA9F,OAQb+F,UAAY,WACRjB,QAAQC,IAAI,kGApDR/F,KAAKN,MAAMK,OAAOW,KAAKC,OACvBX,KAAKN,MAAMG,QAAQC,KAAK,0CAsDtB,IAIFkH,EAJE/E,EAAAjC,KAEED,EAAYC,KAAKN,MAAjBK,OACJkH,EAAa,mCAGjBD,EAAgB7G,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,QAEbP,EAAOuG,cACNW,GAAc,iBAGlB,IAAM7D,EAAgB,CAClBf,SAAU,QACV1B,MAAOZ,EAAOW,KAAKC,MACnBC,SAAUb,EAAOW,KAAKE,SACtB0B,KAAMvC,EAAOW,KAAKwG,QAClB5D,aAAa,GAGbrD,EAASF,EAAOG,QAAU,sBAAwB,qBAEtD,OAASC,EAAAC,EAAAC,cAACkD,EAAA,SAAD,KACbpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCAGXH,EAAAC,EAAAC,cAACmD,EAAD,CAAQtB,QAASkB,IAGjBjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBC,MAAO,CAAC4G,gBAAe,OAAA5F,OAAS6F,IAAT,UARnE,oCAgBAjH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,OAQAH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAC8G,SAAU,QAASC,OAAQ,IAAKC,MAAO,SAChDpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCAKnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SACIf,MAAOS,EAAOyH,OACdlH,UAAU,UACVlB,KAAK,QAAQqI,IAAK,KAAQC,IAAK,MAAQC,KAAK,MAC5CC,cAAe5H,KAAKyG,gBACpBoB,SAAU7H,KAAK2G,aACfmB,YAAe9H,KAAK2G,aACpBoB,YAAa/H,KAAK6G,gBAEtB1G,EAAAC,EAAAC,cAAA,YAAUC,UAAU,cAAcoH,IAAK,MAAQpI,MAAOS,EAAOyH,SAE7DrH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAACwD,EAAD,CAAUE,QAAShE,EAAOiI,iBAE9B7H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eACZH,EAAAC,EAAAC,cAACwD,EAAD,CAAUE,QAAShE,EAAOkI,cAAgBlI,EAAOiI,oBAMjE7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAuBG,QAAS,kBAAIwB,EAAKkD,oBAAoB,KACzEhF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAGrBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaG,QAAST,KAAKR,YACvCW,EAAAC,EAAAC,cAAA,KAAGC,UAAWL,MAGtBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAUG,QAAS,kBAAIwB,EAAKkD,mBAAmB,KAC3DhF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAKzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAmCG,QAAS,kBAAMwB,EAAKsD,SAAS,SAC5EpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,QAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAmCG,QAAS,kBAAMwB,EAAKsD,SAAS,SAC5EpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,SAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAMfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAmCG,QAAS,kBAAMwB,EAAKsD,SAAS,SAC5EpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,SAIRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mCAAmCG,QAAS,kBAAMwB,EAAKsD,SAAS,SAC5EpF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAhB,SAMZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gBAAgBuH,SAAU7H,KAAKyF,iBAAkByC,aAAcnI,EAAOoI,cACpFhI,EAAAC,EAAAC,cAAA,UAAQf,MAAO,IAAf,QACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,GAAf,MACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,MAAf,SACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,KAAf,QACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,MAAf,SACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,GAAf,MACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,MAAf,SACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,KAAf,QACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,MAAf,SACAa,EAAAC,EAAAC,cAAA,UAAQf,MAAO,GAAf,QAIRa,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAW2G,EAAYxG,QAAST,KAAKoG,YACvCjG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACZ0G,OASb7G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,gBA5PCO,aA0RVE,cAlBS,SAACC,GACrB,MAAO,CACHjB,OAAQiB,EAAMjB,SAIK,SAACkB,GACxB,MAAO,CACHtB,aAAc,kBAAMsB,ENpQjB,CACH7B,KAAM,iBMoQNF,WAAY,SAAC0E,GAAD,OAAY3C,EAAS/B,EAAW0E,KAC5C2B,SAAU,SAAC6C,GAAD,OAAcnH,EN1PR,SAACmH,GACrB,MAAO,CACHhJ,KAAM,YACNgJ,YMuPiC7C,CAAS6C,KAC1CzC,mBAAoB,SAAC0C,GAAD,OAAUpH,EN9OJ,SAACoH,GAC/B,MAAO,CACHjJ,KAAM,uBACNiJ,QM2OuC1C,CAAmB0C,KAC1DlC,YAAa,SAACkC,GAAD,OAAUpH,ENvOpB,CACH7B,KAAM,kBMuONsH,iBAAkB,SAAC4B,GAAD,OAAYrH,ENnON,SAACqH,GAC7B,MAAO,CACHlJ,KAAM,qBACNmJ,WAAYD,GMgO2B5B,CAAiB4B,KACxDjJ,aAAc,SAACC,GAAD,OAAW2B,EAAS5B,EAAaC,OAIxCyB,CAA6CgE,oBC5RtDyD,6MAEFC,IAAM,SAAA1I,GACFN,EAAKM,OAASA,KAGlB2I,kBAAoB,WAChBjJ,EAAKC,MAAMiJ,WAAWlJ,EAAKM,WAG/B6I,UAAY,SAAC3C,GAELA,EAAIA,EAAO,EACXxG,EAAKM,OAAO8I,OAAOpJ,EAAKM,OAAO+I,cAAc7C,GAE7CxG,EAAKM,OAAO8I,OAAOpJ,EAAKM,OAAOgJ,iBAAmB9C,MAI1D+C,UAAY,WACRvJ,EAAKC,MAAMuJ,oBAGfnC,WAAa,SAAA9F,GAETvB,EAAKC,MAAMwJ,UAAUlI,EAAOvB,EAAKM,OAAO+I,wFAGlC,IACE/I,EAAYC,KAAKN,MAAjBK,OAER,OAAQA,EAAOwF,UACX,IAAK,MACDvF,KAAK4I,WAAW,IAChB5I,KAAKgJ,YACT,MACA,IAAK,MACDhJ,KAAK4I,WAAW,IAChB5I,KAAKgJ,YACT,MACA,IAAK,MACDhJ,KAAK4I,UAAU,IACf5I,KAAKgJ,YACT,MACA,IAAK,MACDhJ,KAAK4I,UAAU,IACf5I,KAAKgJ,YACT,MAEA,QACQjJ,EAAOwF,SAAW,IAAMxF,EAAOwI,aAC/BvI,KAAK4I,UAAU7I,EAAOyH,QACtBxH,KAAKgJ,aAKjB,OACI7I,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAC8I,EAAA/I,EAAD,CACIqI,IAAKzI,KAAKyI,IACVN,aAAcpI,EAAOoI,aACrBiB,QAASpJ,KAAKoJ,QACdlJ,QAASH,EAAOG,QAChBI,UAAU,YACV+I,IAAKtJ,EAAOW,KAAK2I,IACjBvC,WAAY9G,KAAK8G,qBAlEhBjG,aAwFNE,cAfS,SAACC,EAAO2C,GAC5B,MAAO,CACH5D,OAAQiB,EAAMjB,SAIK,SAACkB,GACxB,MAAO,CACH0H,WAAY,SAACW,GAAD,OAAgBrI,EPnFV,SAACqI,GACvB,OAAO,SAACrI,EAAUsI,GAEd,IAAIC,EAAc,GAElBzK,EAAG0K,WAAW,SAASC,IAAI,SAASC,MAAMC,KAAK,SAACC,GAC5CL,EAAcK,EAAcC,SAC7BF,KAAK,WACJ3I,EAAS,CAAE7B,KAAM,cAAekK,aAAYE,kBAC7CO,MAAM,SAACC,GACNlE,QAAQC,IAAIiE,MOyEqBrB,CAAWW,KAChDL,eAAgB,kBAAMhI,EPhDnB,CACH7B,KAAM,sBOgDNC,aAAc,SAACC,GAAD,OAAW2B,EAAS5B,EAAaC,KAC/C4J,UAAW,SAACZ,EAAQrC,GAAT,OAAiBhF,EPlBX,SAACqH,EAAQrC,GAC9B,MAAO,CACH7G,KAAM,aACNkJ,OAAQA,EACRrC,OOcqCiD,CAAUZ,EAAQrC,OAIhDlF,CAA6CyH,kBCtFtDyB,6MACFT,YAAc,KACdU,OAAS,KACTlJ,MAAQ,CACJmJ,SAAS,KAGbzB,kBAAoB,WACZjJ,EAAKC,MAAMT,KAAK0D,aAWhBlD,EAAK2K,SAALtH,OAAAuH,EAAA,EAAAvH,CAAA,GACOrD,EAAKuB,MADZ,CAEImJ,SAAS,KAZbjE,WAAW,WACPzG,EAAK2K,SAALtH,OAAAuH,EAAA,EAAAvH,CAAA,GACOrD,EAAKuB,MADZ,CAEImJ,SAAS,KAET1K,EAAKC,MAAMT,KAAK0D,cAChBlD,EAAKC,MAAMG,QAAQC,KAAK,WAE7B,QASXwK,aAAe,SAACC,EAAUtH,GAEtB,IAAMuH,EAAa1H,OAAO2H,QAAQF,GAAUvH,IAAI,SAAC0C,GAAD,OAAUA,EAAE,KAG5DjG,EAAKC,MAAMgL,eAAeF,EAAYvH,GAGtCxD,EAAKC,MAAMG,QAAQC,KAAK,YAG5B6K,aAAe,SAAC5K,GAAW,IACf6K,EAAiB7K,EAAjB6K,aAEJC,EAAepL,EAAK6K,aAQxB,OAPaM,EAAe9H,OAAOC,KAAK6H,GAAc5H,IAAI,SAASC,EAAKC,GACxD,OAAQ/C,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,EAAOzC,QAAS,WAAOoK,EAAaD,EAAa3H,GAAMA,IAAO3C,UAH9E,sFAIW2C,KAGR,QAKzBG,cAAgB,CACZf,SAAU,KACV1B,MAAO,SACPC,SAAU,KACV0B,KAAM,KACNgB,aAAa,2EAGP,IAEEvD,EAAWC,KAAKN,MAAhBK,OAER,OAAGC,KAAKgB,MAAMmJ,QACFhK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACyK,EAAA,gBAAD,CACIC,KAAM,GACNC,MAAM,mBACNb,QAASnK,KAAKgB,MAAMmJ,YAKhChK,EAAAC,EAAAC,cAACkD,EAAA,SAAD,KAEIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAACmD,EAAD,CAAQtB,QAASlC,KAAKoD,gBACpBpD,KAAK2K,aAAa5K,IAE5BI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,OAIRH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACkD,UAAW,WAEtB1D,EAAOW,KAAKC,MAAQR,EAAAC,EAAAC,cAACqD,EAAD,MAAmB,aAzFpC7C,aA6GdE,cAbS,SAACC,EAAO2C,GAC5B,MAAO,CACH5D,OAAQiB,EAAMjB,OACdd,KAAM+B,EAAM/B,OAIO,SAACgC,GACxB,MAAO,CACHyJ,eAAgB,SAACH,EAAUlH,GAAX,OAAwBpC,ERjClB,SAACsJ,EAAUlH,GACrC,MAAO,CACHjE,KAAM,kBACNmL,WACAlH,YQ6BiDqH,CAAeH,EAAUlH,OAInEtC,CAA6CkJ,mBC/GtDgB,6MAEFjK,MAAQ,CACJkK,MAAO,GACPC,SAAU,MAIdC,aAAe,SAAC1F,GACZA,EAAE2F,iBACF5L,EAAKC,MAAM4L,eAAe7L,EAAKuB,UAGnCuK,aAAe,SAAC7F,GACZjG,EAAK2K,SAALtH,OAAAuH,EAAA,EAAAvH,CAAA,GACOrD,EAAKuB,MADZ8B,OAAA0I,EAAA,EAAA1I,CAAA,GAEK4C,EAAEE,OAAO6F,GAAK/F,EAAEE,OAAOtG,kFAK5B,OAAGU,KAAKN,MAAMT,KAAK0D,aACRxC,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAU9J,GAAG,MAEZzB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMsL,SAAU3L,KAAKoL,cACjBjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAsBH,EAAAC,EAAAC,cAAA,yBAExCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,OAAOqM,GAAG,QAAQnL,UAAU,iBACrEH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,SAAf,UAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,WAAWqM,GAAG,WAAWnL,UAAU,iBAC5EH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,YAAf,aAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQjB,KAAK,SAASkB,UAAU,iEAAhC,YAaVN,KAAKN,MAAMT,KAAK4M,UACd1L,EAAAC,EAAAC,cAAA,OAAKyL,MAAM,qBAAqBC,KAAK,SAC/B/L,KAAKN,MAAMT,KAAK4M,WAItB,KAEJ1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mDAAb,YAEIH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,UAAWtB,UAAU,kBAA/B,eAOhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,cA1ERO,aA+FLE,cAZS,SAACC,EAAO2C,GAC5B,MAAO,CACH1E,KAAM+B,EAAM/B,OAIO,SAACgC,GACxB,MAAO,CACHqK,eAAgB,SAACf,GAAD,OAActJ,GClFP+K,EDkF+BzB,ECjFnD,SAACtJ,EAAUsI,GACdtK,EAAKgN,2BAA2BD,EAAMd,MAAOc,EAAMb,UAClDvB,KAAK,WACF3I,EAAS,CAAE7B,KAAM,oBAEpB2K,MAAM,SAACC,GACJ/I,EAAS,CAAE7B,KAAM,cAAe4K,aAPd,IAACgC,KDsFhBjL,CAA6CkK,GE/FtDiB,6MAEFlL,MAAQ,CACJkK,MAAO,GACPC,SAAU,GACVgB,UAAW,GACXC,KAAM,MAGVhB,aAAe,SAAC1F,GACZA,EAAE2F,iBACF5L,EAAKC,MAAM2M,gBAAgB5M,EAAKuB,UAGpCuK,aAAe,SAAC7F,GACZjG,EAAK2K,SAALtH,OAAAuH,EAAA,EAAAvH,CAAA,GACOrD,EAAKuB,MADZ8B,OAAA0I,EAAA,EAAA1I,CAAA,GAEK4C,EAAEE,OAAO6F,GAAK/F,EAAEE,OAAOtG,kFAK5B,OAAGU,KAAKN,MAAMT,KAAK0D,aACRxC,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAU9J,GAAG,MAEbzB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAMsL,SAAU3L,KAAKoL,cACjBjL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBAAsBH,EAAAC,EAAAC,cAAA,2BAExCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,OAAOqM,GAAG,YAAYnL,UAAU,iBACzEH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,aAAf,eAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,OAAOqM,GAAG,QAAQnL,UAAU,iBACrEH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,SAAf,UAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,WAAWqM,GAAG,WAAWnL,UAAU,iBAC5EH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,YAAf,aAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcnM,KAAK,OAAOqM,GAAG,OAAOnL,UAAU,iBACpEH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,QAAf,SAEJzL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,UAAQjB,KAAK,SAASkB,UAAU,iEAAhC,cAcVN,KAAKN,MAAMT,KAAK4M,UACd1L,EAAAC,EAAAC,cAAA,OAAKyL,MAAM,qBAAqBC,KAAK,SAC/B/L,KAAKN,MAAMT,KAAK4M,WAItB,KAGJ1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mDAAb,oBAEIH,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAAMC,GAAI,SAAUtB,UAAU,kBAA9B,aAOhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCAAf,cArFPO,aAwGNE,cAZS,SAACC,EAAO2C,GAC5B,MAAO,CACH1E,KAAM+B,EAAM/B,OAIO,SAACgC,GACxB,MAAO,CACHoL,gBAAiB,SAACvC,GAAD,OAAU7I,ED/EJ,SAAC6I,GAC5B,OAAO,SAAC7I,EAAUsI,GACdtK,EAAKqN,+BAA+BxC,EAAKoB,MAAOpB,EAAKqB,UACpDvB,KAAK,SAAA2C,GACF,OAAOxN,EAAG0K,WAAW,SAASC,IAAI6C,EAAKC,KAAKC,KAAKC,IAAI,CACnDP,UAAWrC,EAAKqC,UAChBC,KAAMtC,EAAKsC,SAEZxC,KAAK,WACN3I,EAAS,CAAE7B,KAAM,qBAChB2K,MAAM,SAACC,GACR/I,EAAS,CAAE7B,KAAM,eAAgB4K,WCoEDqC,CAAgBvC,OAI7C/I,CAA6CmL,GCxGtDS,6MAEFjE,kBAAoB,WACZjJ,EAAKC,MAAMT,KAAK0D,cAChBlD,EAAKC,MAAMG,QAAQC,KAAK,QAIhC8M,OAAS,WACLnN,EAAKC,MAAMmN,UACX3G,WAAW,WACPzG,EAAKC,MAAMG,QAAQC,KAAK,WACzB,QAEPgN,cAAgB,WACZvG,aAAawG,QAAQ,YAAatN,EAAKuB,MAAMgM,cAGjDhM,MAAQ,CACJgM,UAAWzG,aAAaC,QAAQ,gBAGpC+E,aAAe,SAAC7F,GACZjG,EAAK2K,SAALtH,OAAAuH,EAAA,EAAAvH,CAAA,GACOrD,EAAKuB,MADZ,CAEIgM,UAA4B,GAAjBtH,EAAEE,OAAOtG,kFAaxB,OACIa,EAAAC,EAAAC,cAACkD,EAAA,SAAD,KACIpD,EAAAC,EAAAC,cAACmD,EAAD,CAAQtB,QATM,CAClBG,SAAU,OACV1B,MAAO,WACPC,SAAU,KACV0B,KAAM,KACNgB,aAAa,KAMTnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oEACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,SAAOwH,SAAU7H,KAAKuL,aAAcjM,MAAOU,KAAKgB,MAAMgM,UAAU,GAAI5N,KAAK,OAAOqM,GAAG,YAAYnL,UAAU,iBAD7G,aAEIH,EAAAC,EAAAC,cAAA,SAAOuL,QAAQ,YAAYtL,UAAU,UAArC,eAEJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAkBG,QAAST,KAAK8M,eAAlD,uBAEJ3M,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0DACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBG,QAAST,KAAK4M,QAA9C,oBAnDD/L,aAuERE,cAZS,SAACC,EAAO2C,GAC5B,MAAO,CACH1E,KAAM+B,EAAM/B,OAIO,SAACgC,GACxB,MAAO,CACH4L,QAAS,kBAAM5L,EF7BZ,SAACA,EAAUsI,GACdtK,EAAK4N,UAAUjD,KAAK,WAChB3I,EAAS,CAAC7B,KAAM,eACf2K,MAAM,SAASkD,GAChBnH,QAAQC,IAAIkH,UE6BTlM,CAA6C4L,GC/DtDO,6MACFxE,kBAAoB,WAChBjJ,EAAKC,MAAMyN,6FAQX,OAJI5G,aAAaC,QAAQ,cACrBD,aAAawG,QAAQ,YAAa,MAIlC5M,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEXH,EAAAC,EAAAC,cAAC+M,EAAD,MACAjN,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO2B,OAAK,EAACtL,KAAK,IAAIuL,UAAWrD,IACjC9J,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO2B,OAAK,EAACtL,KAAK,QAAQuL,UAAW9K,IACrCrC,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO3J,KAAK,QAAQuL,UAAWvI,IAC/B5E,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO3J,KAAK,SAASuL,UAAWrC,IAChC9K,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO3J,KAAK,UAAUuL,UAAWpB,IACjC/L,EAAAC,EAAAC,cAACqL,EAAA,EAAD,CAAO3J,KAAK,YAAYuL,UAAWX,aApBrC9L,aAwCHE,cAXS,SAACC,EAAO2C,GAC5B,MAAO,CACH1E,KAAM+B,EAAM/B,OAGO,SAACgC,GACxB,MAAO,CACHkM,kBAAmB,kBAAMlM,EH5CtB,SAACA,EAAUsI,GAEdtK,EAAKsO,mBAAmB,WACpBtM,EAAS,CAAE7B,KAAM,sBAAuBkJ,SAAQrJ,EAAKuO,qBG6ClDzM,CAA6CmM,GCzCxCO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,+EClBAC,GAAY,CACdnL,cAAc,GAiDHoL,GA9CK,WAA+B,IAA9B/M,EAA8BgN,UAAAC,OAAA,QAAA3I,IAAA0I,UAAA,GAAAA,UAAA,GAAtBF,GAAWI,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAA1I,EAE/C,OAAQ4I,EAAO9O,MACX,IAAK,sBACD,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI2B,aAAcuL,EAAO5F,SAG7B,IAAK,WACD,OAAOxF,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI2B,cAAc,IAGtB,IAAK,iBACG,OAAOG,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI2B,cAAc,EACdkJ,UAAW,OAGvB,IAAK,eACG,OAAO/I,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI6K,UAAWqC,EAAOlE,IAAImE,UAGlC,IAAK,gBACL,OAAOrL,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI2B,cAAc,EACdkJ,UAAW,OAGf,IAAK,cACL,OAAO/I,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI6K,UAAWqC,EAAOlE,IAAImE,UAG1B,QACI,OAAOnN,IC9Cb8M,GAAY,CACd5N,SAAS,EACTQ,KAAM,CACFC,MAAO,KACPC,SAAU,KACV6K,GAAI,MAERnC,WAAY,GACZ/D,SAAU,GACV4C,aAAc,EACd7B,YAAa,KACbiC,YAAY,EACZf,OAAQ,EACRQ,cAAe,EACfoG,OAAQ,EACRC,cAAe,EACfpG,cAAe,EACf5E,SAAU,MAgFCiL,GA7EO,WAA+B,IAA9BtN,EAA8BgN,UAAAC,OAAA,QAAA3I,IAAA0I,UAAA,GAAAA,UAAA,GAAtBF,GAAWI,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAA1I,EAEjD,GAAmB,gBAAhB4I,EAAO9O,KACN,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEId,SAAUc,EAAMd,UAEjB,GAAmB,gBAAhBgO,EAAO9O,KAAwB,CACrC,IAAMmP,EAAMvN,EAAM0B,UAAU8L,OAAO,SAAA9N,GAC/B,OAAOA,IAASwN,EAAO/O,aAG3B,OADA6B,EAAMsI,WAAWT,OAAO,IAChB0F,EAAIN,OAALnL,OAAAuH,EAAA,EAAAvH,CAAA,GAAkC9B,EAAlC,CAAyCd,SAAS,EAAMQ,KAAM6N,EAAI,KAAlEzL,OAAAuH,EAAA,EAAAvH,CAAA,GAAmB9B,GACvB,GAAmB,gBAAhBkN,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIsI,WAAY4E,EAAO5E,WACnBsB,aAAcsD,EAAO1E,YACrB9G,UAAW,KAEZ,GAAmB,cAAhBwL,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIuE,SAAU2I,EAAO9F,WAElB,GAAmB,qBAAhB8F,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIuE,SAAU,OAEX,GAAmB,yBAAhB2I,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEImH,aAAcvB,WAAWsH,EAAO7F,QAEjC,GAAmB,iBAAhB6F,EAAO9O,KAAyB,CACtC,GAAyB,OAAtB4B,EAAMsF,YACL,OAAOxD,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIsF,YAAa,IAEd,GAAyB,IAAtBtF,EAAMsF,YACZ,OAAOxD,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIsF,YAAa,WAGlB,IAAmB,uBAAhB4H,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIuH,WAAY2F,EAAO3F,aAEpB,GAAmB,kBAAhB2F,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIwG,OAAQ0G,EAAO5O,QAEhB,GAAmB,eAAhB4O,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEIwG,OAAQZ,WAAWsH,EAAO5F,OAAOd,QACjCQ,cAAepB,WAAWsH,EAAO5F,OAAON,eACxCoG,OAAQxH,WAAWsH,EAAO5F,OAAO8F,QACjCC,cAAezH,WAAWsH,EAAO5F,OAAO+F,eACxCpG,cAAerB,WAAWsH,EAAOjI,OAElC,GAAmB,oBAAhBiI,EAAO9O,KACb,OAAO0D,OAAAuH,EAAA,EAAAvH,CAAA,GACA9B,EADP,CAEI0B,UAAWwL,EAAO3D,SAClBlH,SAAU6K,EAAO7K,WAIzB,OAAOrC,GCnFIyN,GANKC,YAAgB,CAChCzP,KAAM8O,GACNhO,OAAQuO,KCENK,GAAQC,YAAYH,GAAaI,YAAgBC,MAGvDC,IAASC,OAAO7O,EAAAC,EAAAC,cAAC4O,EAAA,EAAD,CAAUN,MAAOA,IAAOxO,EAAAC,EAAAC,cAAC6O,EAAD,OAAoBC,SAASC,eAAe,SJqH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3F,KAAK,SAAA4F,GACjCA,EAAaC","file":"static/js/main.c538d085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.1f2c801c.jpg\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCKwHZ19MLlPx_FYgpvA6pbhkzTSsNhTrM\",\r\n    authDomain: \"shruti-ac2cd.firebaseapp.com\",\r\n    databaseURL: \"https://shruti-ac2cd.firebaseio.com\",\r\n    projectId: \"shruti-ac2cd\",\r\n    storageBucket: \"shruti-ac2cd.appspot.com\",\r\n    messagingSenderId: \"184253930018\",\r\n    appId: \"1:184253930018:web:4fcc8249564d9507\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  // Firestore\r\n  const db = firebase.firestore();\r\n  // Firebase\r\n  export let auth = firebase.auth();\r\n\r\n  export default db;","import db from '../config/fbConfig'\r\n\r\n\r\nexport const initPlayer = (RPControls) => {\r\n    return (dispatch, getState) => {\r\n        // Async CODE\r\n        let initialData = [];\r\n\r\n        db.collection(\"Books\").doc('books').get().then((querySnapshot) => {\r\n            initialData = querySnapshot.data()\r\n        }).then(() => {\r\n            dispatch({ type: 'INIT_PLAYER', RPControls, initialData})\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const togglePlayer = () => {\r\n    return {\r\n        type: 'TOGGLE_PLAY'\r\n    }\r\n}\r\n\r\nexport const changeSong = (songObject) => {\r\n    return {\r\n        type: 'CHANGE_SONG',\r\n        songObject\r\n    }\r\n}\r\n\r\nexport const seekSong = (duration) => {\r\n    return {\r\n        type: 'SEEK_SONG',\r\n        duration\r\n    }\r\n}\r\n\r\nexport const resetSeekValue = () => {\r\n    return {\r\n        type: 'RESET_SEEK_VALUE'\r\n    }\r\n}\r\n\r\nexport const changePlaybackRate = (rate) => {\r\n    return {\r\n        type: 'CHANGE_PLAYBACK_RATE',\r\n        rate\r\n    }\r\n}\r\n\r\nexport const toggleTimer = () => {\r\n    return {\r\n        type: 'TOGGLE_TIMER',\r\n    }\r\n}\r\n\r\nexport const updateSeekStatus = (status) => {\r\n    return {\r\n        type: 'UPDATE_SEEK_STATUS',\r\n        seekStatus: status\r\n    }\r\n}\r\n\r\nexport const updatePlayed = (value) => {\r\n    return {\r\n        type: 'UPDATE_PLAYED',\r\n        value\r\n    }\r\n}\r\n\r\nexport const refUPDATE = (status, dur) => {\r\n    return {\r\n        type: 'REF_UPDATE',\r\n        status: status,\r\n        dur\r\n    }\r\n}\r\n\r\nexport const changePlaylist = (playlist, bookName) => {\r\n    return {\r\n        type: 'CHANGE_PLAYLIST',\r\n        playlist,\r\n        bookName\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { togglePlayer } from '../../actions/playerActions';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass BottomPlayer extends Component {\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlayer();\r\n    }\r\n    openFullPlayer = () => {\r\n        this.props.history.push('/play');\r\n    }\r\n    render () {\r\n        const { player }  = this.props;\r\n\r\n        let button = player.playing ? 'fas fa-pause-circle' : 'fas fa-play-circle';\r\n        \r\n        return (\r\n            <span>\r\n                <div className=\"bottomPlayer\">\r\n                    <div className=\"container list-group-item text-light waves-effect waves-light font-weight-bold darken-4\" style={{background: '#212121'}}>\r\n                        <div className=\"row \">\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                            <div className=\"col-xl-3 col-lg-3 col-md-6 col-sm-6 col-10 black bottomPlayer-shadow\" onClick={this.openFullPlayer}>\r\n                                <div className=\"songTitle text-success\">\r\n                                    {player.song.title}\r\n                                </div>\r\n                                <p className=\"font-weight-lighter author-name\">\r\n                                    {player.song.narrator}\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-2 col-2 black bottomPlayer-shadow\">\r\n                                <span className=\"text-white bigFont float-right\" onClick={this.togglePlay}>\r\n                                    <i className={button}></i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        togglePlayer: () => dispatch(togglePlayer())\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStoreToProps, mapDispatchToProps)(BottomPlayer));","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass FloatingButton extends Component {\r\n    fixedButton = ''\r\n    showDown = ''\r\n    showMenu = false\r\n    toggleMenu = () => {\r\n\r\n        if(!this.showMenu) {\r\n            this.fixedButton = 'active'\r\n            this.showDown = 'shown'\r\n        } else {\r\n            this.fixedButton = ''\r\n            this.showDown = ''\r\n        }\r\n        this.showMenu = !this.showMenu\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={`fixed-action-btn ${this.fixedButton}`} style={{top: '0', right: '0', height: '316px'}}>\r\n                <Link onClick={this.toggleMenu} to=\"#\" className=\"btn-floating red waves-effect waves-light\">\r\n                    <i className=\"fas fa-bars\"></i>\r\n                </Link>\r\n\r\n                <ul className=\"list-unstyled\">\r\n                    <li>\r\n                        <Link to={'/settings'} className={`btn-floating btn-sm yellow darken-4 waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-cog\"></i>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={'/'} className={`btn-floating btn-sm green waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-home\"></i>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to={'/help'} className={`btn-floating btn-sm blue darken-1 waves-effect waves-light ${this.showDown}`}>\r\n                            <i className=\"fas fa-question\"></i>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default FloatingButton\r\n","import React, { Component } from 'react'\r\nimport FloatingButton from './FloatingButton';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\r\n    navigate = (path) => {\r\n        if(path !== 'back') {\r\n            this.props.history.push(path)\r\n        } else {\r\n            this.props.history.goBack()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { options } = this.props;\r\n\r\n        return (\r\n            <div className=\"text-white text-center center container\" style={{marginTop: \"10px\", marginBottom: '10px'}}>\r\n                <div className=\"row\">\r\n\r\n                    { options.backLink ? (\r\n                            <div onClick={() => this.navigate(options.backLink)} className=\"col-2 waves-effect waves-light closeButton\">\r\n                                <i className=\"fas fa-chevron-left\"></i>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"col-2 waves-effect waves-light closeButton\">\r\n                                <i className=\"fas fa-headphones\"></i>\r\n                            </div>\r\n                        )\r\n                    } \r\n                    \r\n                    { options.narrator ? (\r\n                        <div className=\"col-8 text-center font-weight-bold\">\r\n                            { options.title }\r\n                            <p className=\"font-weight-lighter\"> { options.narrator } - { options.year }</p>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"col-8 waves-effect waves-light closeButton\">\r\n                            { options.title } \r\n                        </div>\r\n                    ) }\r\n                    \r\n                    <div className=\"col-2\">\r\n                        <FloatingButton />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Header);","import React, { Component, Fragment } from \"react\";\r\nimport BottomPlayer from \"../player/BottomPlayer\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeSong } from '../../actions/playerActions';\r\nimport Header from \"../layout/Header\";\r\n\r\nclass FilesList extends Component {\r\n\r\n    componentDidMount () {\r\n        if(!this.props.player.songsList) {\r\n            this.props.history.push('/');\r\n            \r\n        } else if(!this.props.auth.userLoggedIn) {\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n    selectSong = (songObject) => {\r\n        this.props.changeSong(songObject);\r\n    }\r\n    \r\n    render() {\r\n        const { player } = this.props;\r\n        let selectingSong = this.selectSong;\r\n        let list = player.songsList ? (\r\n\r\n            Object.keys(player.songsList).map(function(key, index) {\r\n                let currentSong = 'list-group-item waves-effect waves-light font-weight-bold darken-4 grey ';\r\n                currentSong +=  player.song.title === player.songsList[key].title ? 'text-success' : 'text-light';\r\n                return (\r\n                            <div key={index} onClick={() => selectingSong(player.songsList[key])} className={ currentSong }>\r\n                                {player.songsList[key].title}\r\n                                <p className=\"font-weight-lighter author-name\">{player.songsList[key].narrator}</p>\r\n                                \r\n                            </div>\r\n                        )\r\n            })\r\n        ) : null;\r\n\r\n        const headerOptions = {\r\n            backLink: '/',\r\n            title: player.bookName,\r\n            narrator: null,\r\n            year: null,\r\n            floatButton: true\r\n        }\r\n\r\n        return  <Fragment>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                            <div className=\"col-xl-4 col-lg-4 col-md-8 col-sm-8\">\r\n                                <Header options={headerOptions} />\r\n                                <div className=\"list-group\">\r\n                                    { list }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div style={{minHeight: '150px'}} ></div>\r\n\r\n                    { player.song.title ? <BottomPlayer /> : null }\r\n\r\n                </Fragment>\r\n            \r\n        \r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeSong: (songId) => dispatch(changeSong(songId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(FilesList);","import React from 'react'\r\n\r\nexport default function Duration ({ className, seconds }) {\r\n  return (\r\n    <time dateTime={`P${Math.round(seconds)}S`} className={className}>\r\n      {format(seconds)}\r\n    </time>\r\n  )\r\n}\r\n\r\nfunction format (seconds) {\r\n  const date = new Date(seconds * 1000)\r\n  const hh = date.getUTCHours()\r\n  const mm = date.getUTCMinutes()\r\n  const ss = pad(date.getUTCSeconds())\r\n  if (hh) {\r\n    return `${hh}:${pad(mm)}:${ss}`\r\n  }\r\n  return `${mm}:${ss}`\r\n}\r\n\r\nfunction pad (string) {\r\n  return ('0' + string).slice(-2)\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { togglePlayer, changeSong, seekSong, changePlaybackRate, toggleTimer, updateSeekStatus, updatePlayed } from '../../actions/playerActions';\r\nimport Duration from \"../../Duration\";\r\nimport CoverImage from \"../../files/cover.jpg\";\r\nimport Header from \"../layout/Header\";\r\n\r\nclass FullPlayer extends Component {\r\n\r\n    togglePlay = () => {\r\n        this.props.togglePlayer();\r\n    }\r\n\r\n    getSongIndexOnPlaylist = (selectedSong) => {\r\n        return this.props.player.songsList.findIndex((song) => {\r\n            return song === selectedSong\r\n        })\r\n    }\r\n\r\n    playNextOrPrevSong = (pick) => {\r\n        const a = this.props.player\r\n        let songIndex = this.getSongIndexOnPlaylist(a.song);\r\n        if(a.songsList[songIndex + pick] !== undefined) {\r\n            this.props.changeSong(a.songsList[songIndex + pick]);\r\n        }\r\n    }\r\n\r\n    seekSong = (amount) => {\r\n        this.props.seekSong(amount);\r\n    }\r\n\r\n    componentDidMount () {\r\n        if(!this.props.player.song.title) {\r\n            this.props.history.push('/book');\r\n        }\r\n    }\r\n\r\n    handleRateChange = (e) => {\r\n        this.props.changePlaybackRate(e.target.value);\r\n    }\r\n\r\n    handleBookMark = () => {\r\n        console.log(\"Handle BookMark\");\r\n    }\r\n\r\n    sleeper = (dur) => {\r\n        setTimeout(() => {\r\n            this.togglePlay();\r\n            this.props.toggleTimer();\r\n        }, dur*1000);\r\n    }\r\n\r\n    sleepTimer = () => {\r\n\r\n        this.props.toggleTimer();\r\n\r\n        setTimeout(() => {\r\n            clearTimeout(this.sleeper);\r\n            if(this.props.player.timerStatus===1) {\r\n                this.sleeper(localStorage.getItem('sleepTime') - 2 ); // 10-2=8 because 3 secs are taken for \"proper\" verification.\r\n            }\r\n        }, 2000);\r\n    }\r\n\r\n    onSeekMouseDown = () => {\r\n        this.props.updateSeekStatus(true);\r\n    }\r\n    onSeekChange = e => {\r\n        this.props.updatePlayed(parseFloat(e.target.value))\r\n    }\r\n    onSeekMouseUp = e => {\r\n        this.props.updateSeekStatus(false);\r\n        this.props.seekSong(parseFloat(e.target.value));\r\n        // this.player.seekTo(parseFloat(e.target.value))\r\n    }\r\n    onProgress = state => {\r\n        // console.log('onProgress', state)\r\n        // // We only want to update time slider if we are not currently seeking\r\n        // if (!this.state.seeking) {\r\n        //   this.setState(state)\r\n        // }\r\n    }\r\n\r\n    songEnded = () => {\r\n        console.log(\"Song ended\");\r\n    }\r\n\r\n    render () {\r\n\r\n        const { player }  = this.props;\r\n        let timerClass = 'bigFont waves-effect waves-light';\r\n        let showTimerMin = '';\r\n\r\n        showTimerMin =  <span className=\"controlLabels\">Beta</span>; // TODO: Until this works properly\r\n\r\n        if(player.timerStatus) {\r\n            timerClass += ' text-success';\r\n        }\r\n\r\n        const headerOptions = {\r\n            backLink: '/book',\r\n            title: player.song.title,\r\n            narrator: player.song.narrator,\r\n            year: player.song.release,\r\n            floatButton: true\r\n        }\r\n        \r\n        let button = player.playing ? 'fas fa-pause-circle' : 'fas fa-play-circle';\r\n        \r\n        return ( <Fragment>\r\n    <div className=\"container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n            <div className=\"col-xl-4 col-lg-4 col-md-8 col-sm-8\">\r\n                <div className=\"grey darken-4 text-center FullPlayer\">\r\n\r\n                    {/* Header */}\r\n                    <Header options={headerOptions} />\r\n                    \r\n                    {/* Header Image */}\r\n                    <div className=\"text-white center container\">\r\n                        <div className=\"row coverImage\" style={{backgroundImage: `url(${CoverImage})`}}>\r\n                            \r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                This app is meant for mobile use\r\n            </div>\r\n            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n        </div>\r\n    </div>\r\n\r\n                    {/* Player controls */}\r\n\r\n\r\n\r\n            <div style={{position: \"fixed\", bottom: '0', width: '100%'}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                        <div className=\"col-xl-4 col-lg-4 col-md-8 col-sm-8\">\r\n\r\n                        \r\n\r\n\r\n                    <div className=\"playerControls text-white\">\r\n                        <div className=\"row align-middle\">\r\n                            <div className=\"col\">\r\n                                <input\r\n                                    value={player.played}\r\n                                    className=\"seekBar\"\r\n                                    type='range' min={0.0001} max={0.9999} step='any'\r\n                                    onPointerDown={this.onSeekMouseDown}\r\n                                    onChange={this.onSeekChange}\r\n                                    onTouchMove = {this.onSeekChange}\r\n                                    onPointerUp={this.onSeekMouseUp}\r\n                                />\r\n                                <progress className=\"progressBar\" max={0.9999} value={player.played} />\r\n                                \r\n                                <span className=\"durations\">\r\n                                    <span className=\"float-left\">\r\n                                        <Duration seconds={player.playedSeconds} />\r\n                                    </span>\r\n                                    <span className=\"float-right\">\r\n                                        <Duration seconds={player.totalDuration - player.playedSeconds} />\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"row align-middle\">\r\n                            <div className=\"col text-right\">\r\n                                <span className=\"bigFont align-middle\" onClick={()=>this.playNextOrPrevSong(-1)}>\r\n                                    <i className=\"fas fa-chevron-circle-left\"></i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <span className=\"biggerFont\" onClick={this.togglePlay}>\r\n                                    <i className={button}></i>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"col text-left\">\r\n                                <span className=\"bigFont\" onClick={()=>this.playNextOrPrevSong(1)}>\r\n                                    <i className=\"fas fa-chevron-circle-right\"></i>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"spacer\"></div>\r\n\r\n                        <div className=\"row align-middle\">\r\n                            <div className=\"col\">\r\n                                <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('60m')}>\r\n                                    <i className=\"fas fa-undo-alt\"></i>\r\n                                    <span className=\"controlLabels\">1m</span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"col text-right\">\r\n                                <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('10m')}>\r\n                                    <i className=\"fas fa-undo-alt\"></i>\r\n                                    <span className=\"controlLabels\">10s</span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"col text-center\">\r\n                                {/* <span className=\"bigFont\" onClick={this.handleBookMark}>\r\n                                    <i className=\"fas fa-bookmark\"></i>\r\n                                </span> */}\r\n                            </div>\r\n\r\n                            <div className=\"col text-left\">\r\n                                <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('10p')}>\r\n                                    <i className=\"fas fa-redo-alt\"></i>\r\n                                    <span className=\"controlLabels\">10s</span>\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"col\">\r\n                                <span className=\"bigFont waves-effect waves-light\" onClick={() => this.seekSong('60p')}>\r\n                                    <i className=\"fas fa-redo-alt\"></i>\r\n                                    <span className=\"controlLabels\">1m</span>\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"spacer\"></div>\r\n\r\n                        <div className=\"row align-middle\">\r\n                            <div className=\"col\"></div>\r\n                            <div className=\"col\">\r\n                                <select className=\"custom-select\" onChange={this.handleRateChange} defaultValue={player.playbackRate}>\r\n                                    <option value={0.5}>0.5x</option>\r\n                                    <option value={1}>1x</option>\r\n                                    <option value={1.25}>1.25x</option>\r\n                                    <option value={1.5}>1.5x</option>\r\n                                    <option value={1.75}>1.75x</option>\r\n                                    <option value={2}>2x</option>\r\n                                    <option value={2.25}>2.25x</option>\r\n                                    <option value={2.5}>2.5x</option>\r\n                                    <option value={2.75}>2.75x</option>\r\n                                    <option value={3}>3x</option>\r\n                                </select>\r\n                            </div>\r\n\r\n                            <div className=\"col-6 bigFont\">\r\n                                <span className={timerClass} onClick={this.sleepTimer}>\r\n                                    <i className=\"fas fa-stopwatch\"></i>\r\n                                    {showTimerMin}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                \r\n                \r\n                \r\n                    </div>\r\n                        <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n                \r\n                </Fragment>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        togglePlayer: () => dispatch(togglePlayer()),\r\n        changeSong: (songId) => dispatch(changeSong(songId)),\r\n        seekSong: (duration) => dispatch(seekSong(duration)),\r\n        changePlaybackRate: (rate) => dispatch(changePlaybackRate(rate)),\r\n        toggleTimer: (rate) => dispatch(toggleTimer(rate)),\r\n        updateSeekStatus: (status) => dispatch(updateSeekStatus(status)),\r\n        updatePlayed: (value) => dispatch(updatePlayed(value)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(FullPlayer);\r\n\r\n\r\n// TODO: SEE IF YOU CAN SIMPLIFY this.props.<>.<>.<> tail by spreading props in simple variable - but that for later.","import React, { Component } from \"react\";\r\nimport ReactPlayer from 'react-player';\r\nimport { connect } from \"react-redux\";\r\nimport { initPlayer, resetSeekValue, updatePlayed, refUPDATE } from '../../actions/playerActions';\r\n\r\nclass Player extends Component {\r\n\r\n    ref = player => {\r\n        this.player = player;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.props.initPlayer(this.player);\r\n    }\r\n\r\n    seekValue = (dur) => {\r\n\r\n        if((dur*dur) < 1) {\r\n            this.player.seekTo(this.player.getDuration()*dur);\r\n        } else {\r\n            this.player.seekTo(this.player.getCurrentTime() + dur);\r\n        }\r\n    }\r\n\r\n    resetSeek = () => {\r\n        this.props.resetSeekValue();\r\n    }\r\n\r\n    onProgress = state => {\r\n        // We only want to update time slider if we are not currently seeking\r\n        this.props.refUPDATE(state, this.player.getDuration());\r\n    }\r\n    \r\n    render () {\r\n        const { player }  = this.props;\r\n\r\n        switch (player.seekSong) {\r\n            case '10m':\r\n                this.seekValue(-10);\r\n                this.resetSeek();\r\n            break;\r\n            case '60m':\r\n                this.seekValue(-60);\r\n                this.resetSeek();\r\n            break;\r\n            case '10p':\r\n                this.seekValue(10);\r\n                this.resetSeek();\r\n            break;\r\n            case '60p':\r\n                this.seekValue(60);\r\n                this.resetSeek();\r\n            break;\r\n        \r\n            default:\r\n                if( player.seekSong > 0 && !player.seekStatus) {\r\n                    this.seekValue(player.played);\r\n                    this.resetSeek();\r\n                }\r\n                break;\r\n        }\r\n        \r\n        return (\r\n            <span>\r\n                <ReactPlayer\r\n                    ref={this.ref}\r\n                    playbackRate={player.playbackRate}\r\n                    onPause={this.onPause}\r\n                    playing={player.playing}\r\n                    className=\"PlayerDia\"\r\n                    url={player.song.url}\r\n                    onProgress={this.onProgress}\r\n                />\r\n            </span>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        initPlayer: (RPControls) => dispatch(initPlayer(RPControls)),\r\n        resetSeekValue: () => dispatch(resetSeekValue()),\r\n        updatePlayed: (value) => dispatch(updatePlayed(value)),\r\n        refUPDATE: (status, dur) => dispatch(refUPDATE(status, dur))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Player);","import React, { Component, Fragment } from \"react\";\r\nimport { changePlaylist } from '../../actions/playerActions';\r\nimport { connect } from \"react-redux\";\r\nimport { FireworkSpinner } from \"react-spinners-kit\";\r\nimport Header from \"../layout/Header\";\r\nimport BottomPlayer from \"../player/BottomPlayer\";\r\n\r\nclass AudioBooksList extends Component {\r\n    initialData = []\r\n    thisbe = ''\r\n    state = {\r\n        loading: true\r\n    }\r\n                \r\n    componentDidMount = () => {\r\n        if(!this.props.auth.userLoggedIn) {\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    ...this.state,\r\n                    loading: false\r\n                })\r\n                if(!this.props.auth.userLoggedIn) {\r\n                    this.props.history.push('/login');\r\n                }\r\n            }, 3000)\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                loading: false\r\n            })\r\n        }\r\n    }\r\n\r\n    goToPlayList = (playlist, key) => {\r\n        // Convert object to array\r\n        const arrayOfObj = Object.entries(playlist).map((e) => (  e[1] ));\r\n\r\n        // Dispatch action\r\n        this.props.changePlaylist(arrayOfObj, key);\r\n\r\n        // Open the book page\r\n        this.props.history.push('/book');\r\n    }\r\n\r\n    makeBookList = (player) => {\r\n        const { allPlaylists } = player\r\n        let currentSong = 'list-group-item waves-effect waves-light font-weight-bold darken-4 grey text-light'\r\n        let tempFunction = this.goToPlayList;\r\n        const list = allPlaylists ? Object.keys(allPlaylists).map(function(key, index) {\r\n                        return  <div key={index} onClick={() => {tempFunction(allPlaylists[key], key)}} className={ currentSong }>\r\n                                    {key}\r\n                                </div>\r\n\r\n                        }) : null\r\n\r\n        return list;\r\n    }\r\n\r\n    headerOptions = {\r\n        backLink: null,\r\n        title: 'Shruti',\r\n        narrator: null,\r\n        year: null,\r\n        floatButton: true\r\n    }\r\n\r\n    render () {\r\n\r\n        const { player } = this.props\r\n\r\n        if(this.state.loading) {\r\n            return  <div className=\"loaderAniContainer\">\r\n                        <div className=\"loaderAni\">\r\n                            <FireworkSpinner\r\n                                size={50}\r\n                                color=\"rgb(0, 255, 137)\"\r\n                                loading={this.state.loading}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n        } else {\r\n            return  <Fragment>\r\n\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                                    <div className=\"col-xl-4 col-lg-4 col-md-8 col-sm-8\">\r\n                                        <Header options={this.headerOptions} />\r\n                                        { this.makeBookList(player) }\r\n                                    </div>\r\n                                <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div style={{minHeight: '150px'}} ></div>\r\n\r\n                        { player.song.title ? <BottomPlayer /> : null }\r\n\r\n                    </Fragment>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        player: state.player,\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePlaylist: (playlist, bookName) => dispatch(changePlaylist(playlist, bookName))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(AudioBooksList);","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { loginWithEmail } from '../../actions/authActions';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n        \r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.loginWithEmail(this.state)\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.userLoggedIn) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return  <section className=\"form-elegant\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                            <div className=\"col-xl-3 col-lg-4 col-md-8 col-sm-8\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body mx-4\">\r\n                                        <form onSubmit={this.handleSubmit}>\r\n                                            <div className=\"text-center\">\r\n                                                <h3 className=\"dark-grey-text mb-5\"><strong>Login</strong></h3>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"email\" className=\"form-control\" />\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"password\" id=\"password\" className=\"form-control\" />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"text-center mb-3\">\r\n                                                <button type=\"submit\" className=\"btn blue-gradient btn-block btn-rounded z-depth-1a text-white\">Login</button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                        {/* <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in with:</p>\r\n                                                // TODO: For future implementation: Use google authentication\r\n                                        <div className=\"row d-flex justify-content-center\">\r\n                                            <button type=\"button\" className=\"btn btn-danger btn-rounded z-depth-1a\">\r\n                                                Google\r\n                                            </button>\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    { this.props.auth.authError ? (\r\n                                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                                            { this.props.auth.authError }\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        null\r\n                                    ) }\r\n                                    <div className=\"modal-footer mx-5 pt-3 mb-1\">\r\n                                        <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                                            New here? \r\n                                            <Link to={'/signup'} className=\"blue-text ml-1\">\r\n                                                Sign Up\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n\r\n                        </div>\r\n                    </section>\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        loginWithEmail: (playlist) => dispatch(loginWithEmail(playlist))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Login);\r\n\r\n","import { auth } from \"../config/fbConfig\";\r\nimport db from '../config/fbConfig'\r\n\r\n\r\nexport const updateLoginStatus = () => {\r\n    return (dispatch, getState) => {\r\n        // Async CODE\r\n        auth.onAuthStateChanged(() => {\r\n            dispatch({ type: 'UPDATE_LOGIN_STATUS', status: auth.currentUser ? true : false})\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const loginWithEmail = (creds) => {\r\n    return (dispatch, getState) => {\r\n        auth.signInWithEmailAndPassword(creds.email, creds.password)\r\n        .then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' });\r\n        })\r\n        .catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUpWithEmail = (data) => {\r\n    return (dispatch, getState) => {\r\n        auth.createUserWithEmailAndPassword(data.email, data.password)\r\n        .then(resp => {\r\n            return db.collection('users').doc(resp.user.uid).set({\r\n              firstName: data.firstName,\r\n              city: data.city\r\n            });\r\n          }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' });\r\n          }).catch((err) => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err});\r\n          });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState) => {\r\n        auth.signOut().then(function() {\r\n            dispatch({type: 'SIGN_OUT'})\r\n          }).catch(function(error) {\r\n            console.log(error)\r\n          });\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from 'react-router-dom'\r\nimport { signUpWithEmail } from '../../actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        city: ''\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUpWithEmail(this.state)\r\n    }\r\n    \r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.props.auth.userLoggedIn) {\r\n            return <Redirect to='/' />\r\n        } else {\r\n            return <section className=\"form-elegant\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                            <div className=\"col-xl-3 col-lg-4 col-md-8 col-sm-8\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body mx-4\">\r\n                                        <form onSubmit={this.handleSubmit}>\r\n                                            <div className=\"text-center\">\r\n                                                <h3 className=\"dark-grey-text mb-5\"><strong>Sign Up</strong></h3>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"firstName\" className=\"form-control\" />\r\n                                                <label htmlFor=\"firstName\">First Name</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"email\" className=\"form-control\" />\r\n                                                <label htmlFor=\"email\">Email</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"password\" id=\"password\" className=\"form-control\" />\r\n                                                <label htmlFor=\"password\">Password</label>\r\n                                            </div>\r\n                                            <div className=\"md-form\">\r\n                                                <input onChange={this.handleChange} type=\"text\" id=\"city\" className=\"form-control\" />\r\n                                                <label htmlFor=\"city\">City</label>\r\n                                            </div>\r\n                                            <div className=\"text-center mb-3\">\r\n                                                <button type=\"submit\" className=\"btn blue-gradient btn-block btn-rounded z-depth-1a text-white\">Sign up</button>\r\n                                            </div>\r\n                                        </form>\r\n\r\n                                        {/* <p className=\"font-small dark-grey-text text-right d-flex justify-content-center mb-3 pt-2\"> or Sign in with:</p>\r\n\r\n                                        <div className=\"row d-flex justify-content-center\">\r\n                                            <button type=\"button\" className=\"btn btn-danger btn-rounded z-depth-1a\">\r\n                                                Google\r\n                                            </button>\r\n                                        </div> */}\r\n\r\n                                    </div>\r\n                                    \r\n                                    { this.props.auth.authError ? (\r\n                                        <div class=\"alert alert-danger\" role=\"alert\">\r\n                                            { this.props.auth.authError }\r\n                                        </div>\r\n\r\n                                    ) : (\r\n                                        null\r\n                                    ) }\r\n\r\n                                    <div className=\"modal-footer mx-5 pt-3 mb-1\">\r\n                                        <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                                            Already a member?\r\n                                            <Link to={'/login'} className=\"blue-text ml-1\">\r\n                                                Login\r\n                                            </Link>\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl col-lg col-md-2 col-sm-2\"> </div>\r\n                        </div>\r\n                    </section>\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUpWithEmail: (data) => dispatch(signUpWithEmail(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(SignUp);\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { signOut } from '../../actions/authActions';\r\nimport { connect } from \"react-redux\";\r\nimport Header from '../layout/Header';\r\n\r\nclass Settings extends Component {\r\n\r\n    componentDidMount = () => {\r\n        if(!this.props.auth.userLoggedIn) {\r\n            this.props.history.push('/');\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        this.props.signOut()\r\n        setTimeout(() => {\r\n            this.props.history.push('/login');\r\n        }, 200)\r\n    }\r\n    setSleepTimer = () => {\r\n        localStorage.setItem('sleepTime', this.state.sleepTime)\r\n    }\r\n\r\n    state = {\r\n        sleepTime: localStorage.getItem('sleepTime')\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            ...this.state,\r\n            sleepTime: e.target.value * 60\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const headerOptions = {\r\n            backLink: 'back',\r\n            title: 'Settings',\r\n            narrator: null,\r\n            year: null,\r\n            floatButton: true\r\n        }\r\n        return (\r\n            <Fragment>\r\n                <Header options={headerOptions} />\r\n\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item waves-effect waves-light darken-4 grey text-info\">\r\n                        <div className=\"md-form\">\r\n                            <input onChange={this.handleChange} value={this.state.sleepTime/60} type=\"text\" id=\"sleepTime\" className=\"form-control\" /> minute(s)\r\n                            <label htmlFor=\"sleepTime\" className=\"active\">Sleep Time</label>\r\n                        </div>\r\n                        <button className=\"btn btn-success\" onClick={this.setSleepTimer} >Update sleep timer</button>\r\n                    </li>\r\n                    <li className=\"list-group-item waves-effect waves-light darken-4 grey\">\r\n                        <div className=\"btn btn-danger\" onClick={this.logout}>Logout</div>\r\n                    </li>\r\n                </ul>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(Settings);","import React, { Component } from 'react';\r\nimport FilesList from \"./components/list/FilesList\";\r\nimport { connect } from \"react-redux\";\r\nimport FullPlayer from './components/player/FullPlayer';\r\nimport Player from \"./components/player/Player\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport AudioBooksList from \"./components/list/AudioBooksList\";\r\nimport './App.css';\r\nimport { updateLoginStatus } from './actions/authActions';\r\nimport Login from './components/auth/Login';\r\nimport SignUp from './components/auth/SignUp';\r\nimport Settings from './components/pages/Settings';\r\n\r\nclass App extends Component {\r\n    componentDidMount = () => {\r\n        this.props.updateLoginStatus();\r\n    }\r\n    render () {\r\n        \r\n        if(!localStorage.getItem('sleepTime')) {\r\n            localStorage.setItem('sleepTime', 3600);\r\n        }\r\n\r\n        return (\r\n            <HashRouter>\r\n                <div className=\"App\">\r\n                    \r\n                    <Player />\r\n                    <Route exact path='/' component={AudioBooksList} />\r\n                    <Route exact path='/book' component={FilesList}/>\r\n                    <Route path='/play' component={FullPlayer}/>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route path='/signup' component={SignUp} />\r\n                    <Route path='/settings' component={Settings} />\r\n\r\n    \r\n                </div>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStoreToProps = (state, ownProps) => {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateLoginStatus: () => dispatch(updateLoginStatus())\r\n    }\r\n}\r\n\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initState = {\r\n    userLoggedIn: false\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'UPDATE_LOGIN_STATUS':\r\n            return {\r\n                ...state,\r\n                userLoggedIn: action.status\r\n            }\r\n        \r\n        case 'SIGN_OUT':\r\n            return {\r\n                ...state,\r\n                userLoggedIn: false\r\n            }\r\n\r\n        case 'SIGNUP_SUCCESS':\r\n                return {\r\n                    ...state,\r\n                    userLoggedIn: true,\r\n                    authError: null\r\n                }\r\n\r\n        case 'SIGNUP_ERROR':\r\n                return {\r\n                    ...state,\r\n                    authError: action.err.message\r\n                }\r\n\r\n        case 'LOGIN_SUCCESS':\r\n        return {\r\n            ...state,\r\n            userLoggedIn: true,\r\n            authError: null\r\n        }\r\n\r\n        case 'LOGIN_ERROR':\r\n        return {\r\n            ...state,\r\n            authError: action.err.message\r\n        }\r\n\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n\r\n\r\n","const initState = {\r\n    playing: false,\r\n    song: {\r\n        title: null,\r\n        narrator: null,\r\n        id: null\r\n    },\r\n    RPControls: '',\r\n    seekSong: '',\r\n    playbackRate: 1,\r\n    timerStatus: null,\r\n    seekStatus: false,\r\n    played: 0,\r\n    playedSeconds: 0,\r\n    loaded: 0,\r\n    loadedSeconds: 0,\r\n    totalDuration: 0,\r\n    bookName: null\r\n}\r\n\r\nconst playerReducer = (state = initState, action) => {\r\n    // This whole thing should be a switch - not if-else\r\n    if(action.type === 'TOGGLE_PLAY') {\r\n        return {\r\n            ...state,\r\n            playing: !state.playing\r\n        }\r\n    } else if(action.type === 'CHANGE_SONG') {\r\n        const sel = state.songsList.filter(song => {\r\n            return song === action.songObject;\r\n        });\r\n        state.RPControls.seekTo(10);\r\n        return !sel.length ? { ...state } : { ...state, playing: true, song: sel[0] } ;\r\n    } else if(action.type === 'INIT_PLAYER') {\r\n        return {\r\n            ...state,\r\n            RPControls: action.RPControls,\r\n            allPlaylists: action.initialData,\r\n            songsList: []\r\n        }\r\n    } else if(action.type === 'SEEK_SONG') {\r\n        return {\r\n            ...state,\r\n            seekSong: action.duration\r\n        }\r\n    } else if(action.type === 'RESET_SEEK_VALUE') {\r\n        return {\r\n            ...state,\r\n            seekSong: null\r\n        }\r\n    } else if(action.type === 'CHANGE_PLAYBACK_RATE') {\r\n        return {\r\n            ...state,\r\n            playbackRate: parseFloat(action.rate)\r\n        }\r\n    } else if(action.type === 'TOGGLE_TIMER') {\r\n        if(state.timerStatus === null) {\r\n            return {\r\n                ...state,\r\n                timerStatus: 1\r\n            }\r\n        } else if(state.timerStatus === 1) {\r\n            return {\r\n                ...state,\r\n                timerStatus: null\r\n            }\r\n        }\r\n    } else if(action.type === 'UPDATE_SEEK_STATUS') {\r\n        return {\r\n            ...state,\r\n            seekStatus: action.seekStatus\r\n        }\r\n    } else if(action.type === 'UPDATE_PLAYED') {\r\n        return {\r\n            ...state,\r\n            played: action.value\r\n        }\r\n    } else if(action.type === 'REF_UPDATE') {\r\n        return {\r\n            ...state,\r\n            played: parseFloat(action.status.played),\r\n            playedSeconds: parseFloat(action.status.playedSeconds), \r\n            loaded: parseFloat(action.status.loaded), \r\n            loadedSeconds: parseFloat(action.status.loadedSeconds),\r\n            totalDuration: parseFloat(action.dur)\r\n        }\r\n    } else if(action.type === 'CHANGE_PLAYLIST') {\r\n        return {\r\n            ...state,\r\n            songsList: action.playlist,\r\n            bookName: action.bookName\r\n        }\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default playerReducer;","import authReducer from \"./authReducer\";\r\nimport playerReducer from \"./playerReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    player: playerReducer\r\n});\r\n\r\n\r\nexport default rootReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}